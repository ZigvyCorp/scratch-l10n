{
    "boost.color.any": "any color",
    "boost.color.black": "black",
    "boost.color.blue": "blue",
    "boost.color.green": "green",
    "boost.color.red": "red",
    "boost.color.white": "white",
    "boost.color.yellow": "yellow",
    "boost.getMotorPosition": "motor [MOTOR_REPORTER_ID] position",
    "boost.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "boost.motorDirection.backward": "that way",
    "boost.motorDirection.forward": "this way",
    "boost.motorDirection.reverse": "reverse",
    "boost.motorOff": "turn motor [MOTOR_ID] off",
    "boost.motorOn": "turn motor [MOTOR_ID] on",
    "boost.motorOnFor": "turn motor [MOTOR_ID] for [DURATION] seconds",
    "boost.motorOnForRotation": "turn motor [MOTOR_ID] for [ROTATION] rotations",
    "boost.seeingColor": "seeing [COLOR] brick?",
    "boost.setLightHue": "set light color to [HUE]",
    "boost.setMotorDirection": "set motor [MOTOR_ID] direction [MOTOR_DIRECTION]",
    "boost.setMotorPower": "set motor [MOTOR_ID] speed to [POWER] %",
    "boost.tiltDirection.any": "any",
    "boost.tiltDirection.down": "down",
    "boost.tiltDirection.left": "left",
    "boost.tiltDirection.right": "right",
    "boost.tiltDirection.up": "up",
    "boost.whenColor": "when [COLOR] brick seen",
    "boost.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
    "ev3.beepNote": "beep note [NOTE] for [TIME] secs",
    "ev3.buttonPressed": "button [PORT] pressed?",
    "ev3.getBrightness": "brightness",
    "ev3.getDistance": "distance",
    "ev3.getMotorPosition": "motor [PORT] position",
    "ev3.motorSetPower": "motor [PORT] set power [POWER] %",
    "ev3.motorTurnClockwise": "motor [PORT] turn this way for [TIME] seconds",
    "ev3.motorTurnCounterClockwise": "motor [PORT] turn that way for [TIME] seconds",
    "ev3.whenBrightnessLessThan": "when brightness < [DISTANCE]",
    "ev3.whenButtonPressed": "when button [PORT] pressed",
    "ev3.whenDistanceLessThan": "when distance < [DISTANCE]",
    "gdxfor.getAcceleration": "acceleration [DIRECTION]",
    "gdxfor.getForce": "force",
    "gdxfor.getSpin": "spin speed [DIRECTION]",
    "gdxfor.getTilt": "tilt angle [TILT]",
    "gdxfor.isFreeFalling": "falling?",
    "gdxfor.isTilted": "tilted [TILT]?",
    "gdxfor.pulled": "pulled",
    "gdxfor.pushed": "pushed",
    "gdxfor.shaken": "shaken",
    "gdxfor.startedFalling": "started falling",
    "gdxfor.tiltDirectionMenu.any": "any",
    "gdxfor.tiltDirectionMenu.back": "back",
    "gdxfor.tiltDirectionMenu.front": "front",
    "gdxfor.tiltDirectionMenu.left": "left",
    "gdxfor.tiltDirectionMenu.right": "right",
    "gdxfor.turnedFaceDown": "turned face down",
    "gdxfor.turnedFaceUp": "turned face up",
    "gdxfor.whenForcePushedOrPulled": "when force sensor [PUSH_PULL]",
    "gdxfor.whenGesture": "when [GESTURE]",
    "gdxfor.whenTilted": "when tilted [TILT]",
    "makeymakey.downArrow": "down arrow",
    "makeymakey.downArrowShort": "down",
    "makeymakey.leftArrow": "left arrow",
    "makeymakey.leftArrowShort": "left",
    "makeymakey.rightArrow": "right arrow",
    "makeymakey.rightArrowShort": "right",
    "makeymakey.spaceKey": "space",
    "makeymakey.upArrow": "up arrow",
    "makeymakey.upArrowShort": "up",
    "makeymakey.whenKeyPressed": "when [KEY] key pressed",
    "makeymakey.whenKeysPressedInOrder": "when [SEQUENCE] pressed in order",
    "microbit.buttonsMenu.any": "any",
    "microbit.clearDisplay": "clear display",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.displaySymbol": "display [MATRIX]",
    "microbit.displayText": "display text [TEXT]",
    "microbit.gesturesMenu.jumped": "jumped",
    "microbit.gesturesMenu.moved": "moved",
    "microbit.gesturesMenu.shaken": "shaken",
    "microbit.isButtonPressed": "[BTN] button pressed?",
    "microbit.isTilted": "tilted [DIRECTION]?",
    "microbit.pinStateMenu.off": "off",
    "microbit.pinStateMenu.on": "on",
    "microbit.tiltAngle": "tilt angle [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "any",
    "microbit.tiltDirectionMenu.back": "back",
    "microbit.tiltDirectionMenu.front": "front",
    "microbit.tiltDirectionMenu.left": "left",
    "microbit.tiltDirectionMenu.right": "right",
    "microbit.whenButtonPressed": "when [BTN] button pressed",
    "microbit.whenGesture": "when [GESTURE]",
    "microbit.whenPinConnected": "when pin [PIN] connected",
    "microbit.whenTilted": "when tilted [DIRECTION]",
    "music.categoryName": "Music",
    "music.changeTempo": "change tempo by [TEMPO]",
    "music.drumBass": "(2) Bass Drum",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Cabasa",
    "music.drumClaves": "(9) Claves",
    "music.drumClosedHiHat": "(6) Closed Hi-Hat",
    "music.drumConga": "(14) Conga",
    "music.drumCowbell": "(11) Cowbell",
    "music.drumCrashCymbal": "(4) Crash Cymbal",
    "music.drumCuica": "(18) Cuica",
    "music.drumGuiro": "(16) Guiro",
    "music.drumHandClap": "(8) Hand Clap",
    "music.drumOpenHiHat": "(5) Open Hi-Hat",
    "music.drumSideStick": "(3) Side Stick",
    "music.drumSnare": "(1) Snare Drum",
    "music.drumTambourine": "(7) Tambourine",
    "music.drumTriangle": "(12) Triangle",
    "music.drumVibraslap": "(17) Vibraslap",
    "music.drumWoodBlock": "(10) Wood Block",
    "music.getTempo": "tempo",
    "music.instrumentBass": "(6) Bass",
    "music.instrumentBassoon": "(14) Bassoon",
    "music.instrumentCello": "(8) Cello",
    "music.instrumentChoir": "(15) Choir",
    "music.instrumentClarinet": "(10) Clarinet",
    "music.instrumentElectricGuitar": "(5) Electric Guitar",
    "music.instrumentElectricPiano": "(2) Electric Piano",
    "music.instrumentFlute": "(12) Flute",
    "music.instrumentGuitar": "(4) Guitar",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Music Box",
    "music.instrumentOrgan": "(3) Organ",
    "music.instrumentPiano": "(1) Piano",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saxophone",
    "music.instrumentSteelDrum": "(18) Steel Drum",
    "music.instrumentSynthLead": "(20) Synth Lead",
    "music.instrumentSynthPad": "(21) Synth Pad",
    "music.instrumentTrombone": "(9) Trombone",
    "music.instrumentVibraphone": "(16) Vibraphone",
    "music.instrumentWoodenFlute": "(13) Wooden Flute",
    "music.midiPlayDrumForBeats": "play drum [DRUM] for [BEATS] beats",
    "music.midiSetInstrument": "set instrument to [INSTRUMENT]",
    "music.playDrumForBeats": "play drum [DRUM] for [BEATS] beats [BLOCKING]",
    "music.playDrumForBeatsLoudness": "play drum [DRUM] for [BEATS] beats loudness [LOUDNESS] [BLOCKING]",
    "music.playNoteForBeats": "play note [NOTE] for [BEATS] beats blocking [BLOCKING] beats",
    "music.playNoteForBeatsLoudness": "play note [NOTE1] [NOTE2] [NOTE3] [NOTE4] for [BEATS] beats loudness [LOUDNESS] blocking [BLOCKING] beats",
    "music.restForBeats": "rest for [BEATS] beats",
    "music.setInstrument": "set instrument to [INSTRUMENT]",
    "music.setTempo": "set tempo to [TEMPO]",
    "pen.categoryName": "Pen",
    "pen.changeColorParam": "change pen [COLOR_PARAM] by [VALUE]",
    "pen.changeHue": "change pen color by [HUE]",
    "pen.changeShade": "change pen shade by [SHADE]",
    "pen.changeSize": "change pen size by [SIZE]",
    "pen.clear": "erase all",
    "pen.colorMenu.brightness": "brightness",
    "pen.colorMenu.color": "color",
    "pen.colorMenu.saturation": "saturation",
    "pen.colorMenu.transparency": "transparency",
    "pen.penDown": "pen down",
    "pen.penUp": "pen up",
    "pen.setColor": "set pen color to [COLOR]",
    "pen.setColorParam": "set pen [COLOR_PARAM] to [VALUE]",
    "pen.setHue": "set pen color to [HUE]",
    "pen.setShade": "set pen shade to [SHADE]",
    "pen.setSize": "set pen size to [SIZE]",
    "pen.stamp": "stamp",
    "speech.defaultWhenIHearValue": "let's go",
    "speech.extensionName": "Speech to Text",
    "speech.listenAndWait": "listen and wait",
    "speech.speechReporter": "speech",
    "speech.whenIHear": "when I hear [PHRASE]",
    "text2speech.alto": "alto",
    "text2speech.categoryName": "Text to Speech",
    "text2speech.defaultTextToSpeak": "hello",
    "text2speech.giant": "giant",
    "text2speech.kitten": "kitten",
    "text2speech.setLanguageBlock": "set language to [LANGUAGE]",
    "text2speech.setVoiceBlock": "set voice to [VOICE]",
    "text2speech.speakAndWaitBlock": "speak [WORDS]",
    "text2speech.squeak": "squeak",
    "text2speech.tenor": "tenor",
    "translate.categoryName": "Translate",
    "translate.defaultTextToTranslate": "hello",
    "translate.translateBlock": "translate [WORDS] to [LANGUAGE]",
    "translate.viewerLanguage": "language",
    "videoSensing.categoryName": "Video Sensing",
    "videoSensing.direction": "direction",
    "videoSensing.motion": "motion",
    "videoSensing.off": "off",
    "videoSensing.on": "on",
    "videoSensing.onFlipped": "on flipped",
    "videoSensing.setVideoTransparency": "set video transparency to [TRANSPARENCY]",
    "videoSensing.sprite": "sprite",
    "videoSensing.stage": "stage",
    "videoSensing.videoOn": "video [ATTRIBUTE] on [SUBJECT]",
    "videoSensing.videoToggle": "turn video [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "when video motion > [REFERENCE]",
    "wedo2.getDistance": "distance",
    "wedo2.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "wedo2.isTilted": "tilted [TILT_DIRECTION_ANY]?",
    "wedo2.motorDirection.backward": "that way",
    "wedo2.motorDirection.forward": "this way",
    "wedo2.motorDirection.reverse": "reverse",
    "wedo2.motorId.a": "motor A",
    "wedo2.motorId.all": "all motors",
    "wedo2.motorId.b": "motor B",
    "wedo2.motorId.default": "motor",
    "wedo2.motorOff": "turn [MOTOR_ID] off",
    "wedo2.motorOn": "turn [MOTOR_ID] on",
    "wedo2.motorOnFor": "turn [MOTOR_ID] on for [DURATION] seconds",
    "wedo2.playNoteFor": "play note [NOTE] for [DURATION] seconds",
    "wedo2.setLightHue": "set light color to [HUE]",
    "wedo2.setMotorDirection": "set [MOTOR_ID] direction to [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "set [MOTOR_ID] power to [POWER]",
    "wedo2.tiltDirection.any": "any",
    "wedo2.tiltDirection.down": "down",
    "wedo2.tiltDirection.left": "left",
    "wedo2.tiltDirection.right": "right",
    "wedo2.tiltDirection.up": "up",
    "wedo2.whenDistance": "when distance [OP] [REFERENCE]",
    "wedo2.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
    "d3effect.categoryName": "3D Effect",
    "d3tool.categoryName": "3D Tools",
    "d3action.categoryName": "3D Action",
    "d3physics.categoryName": "3D Physics",
    "d3arvr.categoryName": "3D AR/VR",
    "p2p.categoryName": "Cloud",
    "p2p.createWorld": "create world [WORLD] password [PASSWORD] my nick name [NICKNAME]",
    "p2p.joinWorld": "join world [WORLD] password [PASSWORD] my nick name [NICKNAME]",
    "p2p.deleteroom": "delete world [ROOMID]",
    "p2p.leaveworld": "leave world",
    "p2p.destroyworld": "destroy world named [WORLD_NAME]",
    "p2p.broadcast": "broadcast a message [MESSAGE] to world",
    "p2p.receivemessage": "when I receive [MESSAGE] from world",
    "p2p.whenworldcreated": "when world created",
    "p2p.whenmemberjoined": "when new member [USERNAME] with nickname [NICKNAME] joins the world",
    "p2p.whenmemberleft": "when member [USERNAME] leaves the world",
    "p2p.readworldmember": "read world member info into table [WORLD_MEMBER]",
    "p2p.worldHost": "host of world [WORLD_NAME]",
    "p2p.worlds": "worlds",
    "p2p.myWorlds": "my worlds",
    "p2p.myId": "my ID",
    "p2p.nameById": "name of user [ID] in world [WORLD_NAME]",
    "p2p.teamById": "team of user [ID] in world [WORLD_NAME]",
    "p2p.sender": "sender",
    "p2p.message": "message",
    "p2p.worldMembers": "member of world [WORLD_NAME]",
    "p2p.userInfo": "get user info from [WORLD_NAME] in table [USER_INFO_TABLE]",
    "p2p.teamUsers": "users of [TEAM] team",
    "p2p.teams1": "Red, Blue, Green, White, Black, Yellow, Purple, Cyan",
    "p2p.teams1Default": "Red",
    "p2p.teams2": "All, Red, Blue, Green, White, Black, Yellow, Purple, Cyan",
    "p2p.teams2Default": "All",
    "p2p.created": "created",
    "p2p.removed": "removed",
    "p2p.createdOrRemoved": "created or removed",
    "p2p.joined": "joined",
    "p2p.left": "left",
    "p2p.joinedOrLeft": "joined or left",
    "p2p.createEmail": "create email [NAME] from sender [SENDER] email [SENDEREMAIL] to receiver email [RECEIVEREMAIL] Subject [SUBJECT] Content [CONTENT]",
    "p2p.addToEmailContent": "add to email [NAME] content [TEXT] format [FORMAT] color [COLOR] new line [YES]",
    "p2p.sendEmail": "send email [NAME]",
    "p2p.sendPhoneSMS": "send SMS to receiver phone number [RECEIVER] content [CONTENT] from sender name [SENDERNAME]",
    "p2p.formatContent.normal": "normal",
    "p2p.formatContent.bold": "bold",
    "p2p.formatContent.italic": "italic",
    "p2p.formatContent.boldItalic": "bold-italic",
    "widget.categoryName": "Widget",
    "widget.addTextbox": "add textbox at X [X] Y [Y] width [WIDTH] height [HEIGHT] padding [PADDING] line [MULTIPLELINE] scroll [SCROLL] mode [MODE] as [NAME]",
    "widget.valueFromWidget": "value of widget [NAME]",
    "widget.setText": "set value to [TEXT] for widget [NAME]",
    "widget.appendText": "append text [TEXT] to [NAME]",
    "widget.addLabel": "add label [TEXT] at X [X] Y [Y] width [WIDTH] height [HEIGHT] padding [PADDING] as [NAME]",
    "widget.addButton": "add button [TEXT] at X [X] Y [Y] width [WIDTH] height [HEIGHT] tooltip [TOOLTIP] as [NAME]",
    "widget.addDatePicker" : "add date picker at X [X] Y [Y] as [NAME]",
    "widget.addColorPicker": "add color picker at X [X] Y [Y] as [NAME]",
    "widget.addSlider": "add slider at X [X] Y [Y] between [MIN] and [MAX] as [NAME]",
    "widget.addMenu": "add dropdown menu at X [X] Y [Y] width [WIDTH] height [HEIGHT] using list [LIST] as [NAME]",
    "widget.whenWidgetClicked": "when widget [NAME] clicked",
    "widget.whenWidgetChanges": "when widget [NAME] changes",
    "widget.setTextStyle": "set text style [FONT] font size [FONTSIZE] text color [TEXTCOLOR] boldness [BOLDNESS] for widget [NAME]",
    "widget.setWidgetStyle": "set widget background color [BGCOLOR] border color [BORDERCOLOR] border width [BORDERWIDTH] border radius [BORDERRADIUS] for [NAME]",
    "widget.removeWidget": "remove widget named [NAME]",
    "widget.removeAllWidgets": "remove all widgets",
    "widget.setVisibility": "set visibility [VISIBILITY] for widget named [NAME]",
    "widget.setVisibilityForAll": "set visibility [VISIBILITY] for all widgets",
    "widget.whenMouseEnter": "when pointer enters widget named [NAME]",
    "widget.whenMouseLeave": "when pointer leaves widget named [NAME]",
    "widget.addVideo": "add youtube video [URL] at X [X] Y [Y] width [WIDTH] height [HEIGHT] named [NAME] in [BACKGROUND]",
    "widget.actionVideo": "[ACTION] video for [NAME]",
    "widget.seekToSecondsVideo": "seek to [SECONDS] seconds in video named [NAME]",
    "widget.currentVideoTime": "current video time for [NAME]",
    "widget.setYoutubeVolume": "set volume to [VOLUME] for [NAME]",
    "widget.setYoutubePlaybackSpeedRatio": "set playback speed ratio [SPEED] for [NAME]",
    "widget.addImage": "add image [COSTUME] to widget named [NAME] at position X [X] Y [Y]",
    "widget.addImageURL": "add image at URL [URL] to widget named [NAME] at position X [X] Y [Y]",
    "widget.menuItem.single": "single",
    "widget.menuItem.multiple": "multiple",
    "widget.menuItem.scroll": "scroll",
    "widget.menuItem.noScroll": "no scroll",
    "widget.menuItem.input": "input",
    "widget.menuItem.readOnly": "read only",
    "widget.menuItem.normal": "normal",
    "normal": "Normal", 
    "left-right flipped": "Left-Right Flipped",
    "up-down flipped": "Up-Down Flipped",
    "widget.menuItem.bold": "bold",
    "widget.menuItem.show": "show",
    "widget.menuItem.hide": "hide",
    "widget.menuItem.varDefault": "None",
    "widget.menuItem.pleaseSelect": "Please select",
    "widget.menuItem.start": "start",
    "widget.menuItem.pause": "pause",
    "widget.menuItem.stop": "stop",
    "widget.menuItem.mute": "mute",
    "widget.menuItem.unmute": "unmute",
    "widget.moveWidgetToXY": "move widget [NAME] to X [X] Y [Y] in [SECONDS] seconds [BLOCKING]",
    "widget.scaleWidgetToWidthHeight": "scale widget [NAME] to width [WIDTH]% height [HEIGHT]% in [SECONDS] seconds [BLOCKING]",
    "widget.resizeWidgetToWidthHeight": "resize widget [NAME] to width [WIDTH] height [HEIGHT] in [SECONDS] seconds [BLOCKING]",
    "widget.rotateWidgetByDegrees": "rotate widget [NAME] by [DEGREES] degrees in [SECONDS] seconds [BLOCKING]",
    "widget.transparencyToWidget": "set transparency for widget [NAME] to [TRANSPARENT] % in [SECONDS] seconds [BLOCKING]",
    "widget.addLink": "add link at X [X] Y [Y] url [URL] as [NAME]",
    "widget.addMenuBar": "add menu bar at X [X] Y [Y] width [WIDTH] height [HEIGHT] as [NAME]",
    "widget.addMenuGroup": "add menu group [MENUGROUP] to menu bar named [NAME]",
    "widget.addMenuItem": "add menu item [MENUITEM] to menu group named [NAME]",
    "widget.confirmTextWithButtons": "confirm [TEXT] with buttons [BUTTON1] [BUTTON2] [BUTTON3] [BUTTON4] [BUTTON5] [BUTTON6]",
    "widget.whenAnyButtonNamedClicked": "when any button named [VARIABLE] clicked",
    "widget.releaseFocus": "release focus",
    "widget.setValueOfWidgetTo": "set value of widget [WIDGET] to [VALUE]",
    "widget.addRadioButton": "add radio buttons [RADIO1] [RADIO2] [RADIO3] [RADIO4] [RADIO5] [RADIO6] [DIRECTION] at X [X] Y [Y] width [WIDTH] height [HEIGHT] named [NAME]",
    "widget.addCheckbox": "add checkbox at X [X] Y [Y] named [NAME]",
    "widget.addRadioButton.vertical": "vertical",
    "widget.addRadioButton.horizontal": "horizontal",
    "widget.runProject": "run project [PROJECT] in [OPTION] tab",
    "widget.runProject-dropdown1": "this",
    "widget.runProject-dropdown2": "new",
    "widget.openNewTabWithURL": "open URL [URL] in new tab",
    "ai.menuItem.male": "Male",
    "ai.menuItem.female": "Female",
    "ai.menuItem.male2": "Male2",
    "ai.menuItem.female2": "Female2",
    "ai.menuItem.boy": "Boy",
    "ai.menuItem.girl": "Girl",
    "automation.categoryName": "Automation",
    "automation.simulateClick": "simulate pointer click at X [X] Y [Y]",
    "automation.simulateKeyPress": "simulate key-press [KEY]",
    "automation.simulateKeyRelease": "simulate key-release [KEY]",
    "automation.readPixelColor": "RGB color at X [X] Y [Y]",
    "game.categoryName": "Game",
    "game.recordPlayerScore": "record player score [VALUE]",
    "game.showGameLeaderboard": "show game leaderboard [SORT]",
    "game.hideGameLeaderboard": "hide game leaderboard",
    "gui.stageHeader.captureBtn": "Update project preview",
    "gui.sortMenu.highest": "Highest",
    "gui.sortMenu.lowest": "Lowest",  
    "fourdirection": "Four Directions", 
    "forwardandshift": "Forward and Shift", 
    "forwardandturn": "Forward and Turn",
    "top": "Top",
    "bottom": "Bottom", 
    "both": "Both", 
    "blocking": "Blocking",
    "non-blocking": "Non-Blocking",
    "background": "background",
    "foreground": "foreground",
    "camera": "Camera",
    "line": "Line",
    "plane": "Plane",
    "none": "None",
    "ordinary": "Ordinary",
    "rung-only": "Rung-Only", 
    "fill-down": "Fill-Down", 
    "keep": "Keep",
    "Arial": "Arial",
    "Arial, Bold": "Arial, Bold",
    "Times New Roman": "Times New Roman", 
    "Times New Roman, Bold": "Times New Roman, Bold",
    "Helvetica": "Helvetica",
    "Times": "Times", 
    "Courier New": "Courier New",
    "Courier New, Bold": "Courier New, Bold", 
    "Verdana": "Verdana",
    "Courier": "Courier",
    "Calibri": "Calibri",
    "Cambria": "Cambria",
    "Garamond": "Garamond", 
    "Copperplate": "Copperplate",
    "Microsoft Yahei": "Microsoft Yahei",
    "SimSun": "SimSun", 
    "SimSun, Bold": "SimSun, Bold", 
    "SimHei": "SimHei",
    "KaiTi": "KaiTi", 
    "remove": "Remove", 
    "start": "Start",
    "end": "End", 
    "addbox": "Box", 
    "add6box": "6-Colored Box", 
    "addcylinder": "Cylinder", 
    "addplane": "Plane", 
    "addmirrorplane": "Mirror Plane",
    "addtube": "Tube",
    "addcapsule": "Capsule",
    "addtorus": "Torus", 
    "addcolumn": "Column", 
    "addcone": "Cone", 
    "addobject": "Object", 
    "addcharacter": "Character", 
    "addavatar": "Avatar",
    "addanimations": "Animations", 
    "castle": "Castle", 
    "city": "City", 
    "dark": "Dark", 
    "earth": "Earth",
    "daylight": "Daylight",
    "globe": "Globe",
    "school": "School",
    "globechinese": "Globe in Chinese",
    "earthgeography": "Earth Geography",
    "grass": "Grass Land",
    "makeselection": "Please select", 
    "OK": "OK", 
    "Another object has already used this name: ": "Another object has already used this name: ",
    "yes": "Yes", 
    "no": "No", 
    "withBorder": "with border",
    "noBorder": "no border",
    "one": "One",
    "five": "Five", 
    "all": "All", 
    "left-right": "Left-Right", 
    "front-back": "Front-Back", 
    "up-down": "Up-Down", 
    "left-right + front-back": "Left-Right + Front-Back", 
    "left-right + up-down": "Left-Right + Up-Down", 
    "front-back + up-down": "Front-Back + Up-Down",
    "unit": "Unit",
    "main": "Main",
    "second": "Second", 
    "third": "Third", 
    "forth": "Forth", 
    "forward speed": "Forward Speed", 
    "dir speed": "Directional Speed",
    "side move speed": "Side Move Speed", 
    "inside": "Inside",
    "outside": "Outside",
    "avatarme": "Me", 
    "aura": "Aura",
    "flare": "Flare",
    "ring": "Ring",
    "avatargirl1": "Girl 1",  
    "avatarboy1": "Boy 1",
    "avatargirl2": "Girl 2",  
    "avatarboy2": "Boy 2",    
    "avatarrobot1": "Robot 1",
    "avatarrobot2": "Robot 2",
    "avatarrobot3": "Robot 3",
    "rising speed": "Rising Speed", 
    "forward acceleration": "Forward Acceleration", 
    "gravity": "Gravity",
    "z rotation": "Z Rotation",
    "x rotation": "X Rotation", 
    "y rotation": "Y Rotation", 
    "3D Object": "3D Object",
    "X": "X", 
    "Y": "Y", 
    "Z": "Z", 
    "Blocking": "Blocking",
    "Non-Blocking": "Non-Blocking",
    "Select this object": "Select this object", 
    "Select this texture": "Select this texture", 
    "Select this scene": "Select this scene",
    "Select this character": "Select this character", 
    "Select these animations": "Select these animations", 
    "Select this animation": "Select this animation",
    "sky": "Blue Sky",
    "soccerfield": "Soccer Field", 
    "street": "Street", 
    "underwater": "Underwater",
    "on": "on",
    "off": "off",
    "bottomfront": "Bottom Front",
    "low5": "Low with bottom 5",
    "low": "Low",
    "height": "High",
    "default camera": "default",
    "front camera": "Front",
    "back camera": "Back",
    "normal camera mode": "normal",
    "left-right flipped camera mode": "left-right flipped",
    "up-down flipped camera mode": "up-down flipped",
    "front": "front",
    "back": "back",
    "up": "up",
    "down": "down",
    "below": "below",
    "above": "above",
    "left": "left",
    "right": "right",
    "position x": "Position x",
    "position y": "Position y",
    "position z": "Position z",
    "absolute position x": "Absolute position x",
    "absolute position y": "Absolute position y",
    "absolute position z": "Absolute position z",
    "rotation x": "Rotation x",
    "rotation y": "Rotation y",
    "rotation z": "Rotation z",
    "scale x": "Scale x",
    "scale y": "Scale y",
    "scale z": "Scale z",
    "size x": "Size x",
    "size y": "Size y",
    "size z": "Size z",
    "x rotation speed": "Rotation Speed x",
    "y rotation speed": "Rotation Speed y",
    "z rotation speed": "Rotation Speed z",
    "blocked back": "Blocked in the Back",
    "blocked front": "Blocked in the Front",
    "blocked left": "Blocked to the Left",
    "blocked right": "Blocked to the Right",
    "blocked above": "Blocked Above",
    "blocked below": "Blocked Below",
    "blocking object below": "Blocking Object Below",
    "speed x": "Speed X",
    "speed y": "Speed Y",
    "speed z": "Speed Z",
    "3D Scene": "3D Scene",
    "Blue Sky": "Blue Sky", 
    "Earth Rising": "Earth Rising",
    "Starfield 1": "Starfield 1",
    "Starfield 2": "Starfield 2", 
    "Starfield 3": "Starfield 3",
    "Starfield 4": "Starfield 4", 
    "Starfield 5": "Starfield 5",
    "Starfield 6": "Starfield 6", 
    "Starfield 7": "Starfield 7", 
    "Starfield 8": "Starfield 8",
    "Mars Surface": "Mars Surface",
    "Starfield and Sun": "Starfield and Sun", 
    "forwardonly": "Forward Only",
    "speedup": "Acceleration", 
    "zspeed": "Z Speed",
    "screen": "Fixed", 
    "target": "Target", 
    "targetmove": "Target Movement", 
    "free": "Free",
    "freeright": "Free (Right Button)",
    "alpha": "Alpha",
    "beta": "Beta", 
    "v-angle" :"V-Angle",
    "h-angle" :"H-Angle",
    "distance": "Distance",
    "x direction": "X Direction",
    "y direction": "Y Direction",
    "z direction": "Z Direction",
    "x position": "X Position",
    "y position": "Y Position",
    "z position": "Z Position",
    "target x": "Target X",
    "target y": "Target Y",
    "target z": "Target Z",
    "leftbuttonpointer": "Pointer (Left Button)",
    "rightbutton": "Right Button",
    "anydirection": "Any Direction",
    "leftrightonly": "Left-Right Only", 
    "speeddrop": "Speed Drop", 
    "speedlimit": "Speed Limit", 
    "turnright": "Turn Right Speed", 
    "shiftright": "Shift Right Speed",
    "forward": "Forward",
    "jump": "Jump",
    "fly": "Fly", 
    "drive": "Drive", 
    "solar system": "Solar System",
    "empty": "Empty",
    "points": "Points",
    "hi": "Hi",
    "addFpsCarCameraError": "Sorry, when adding the fps car camera, I can't find the target object",
    "addFpsCameraError": "Sorry, when adding the fps camera, I can't find the target",
    "updateFpsCamera": "Sorry, when update the fps camera, I can't find the target",
    "d3_initscene": "initialize 3D scene [SCENETYPE] as hidden [HIDDEN]", 
    "d3_configbrickworld": "configure brick world plane size [SIZE] highlight color [COLOR]",
    "d3_getbrickworldstring": "show brick world code", 
    "d3_loadbrickworldstring": "build brick world from code [CODE]",
    "d3_setscenecolor": "set scene background color [COLOR]",
    "d3_setscenefog": "set scene fog [FOGMODE] [COLOR] start [START] end [END] density [DENSITY]",
    "d3_setclipplane": "set clipping plane [NUMBER] direction xyz [X] [Y] [Z] offset [OFFSET]",
    "d3_removeclipplane": "remove clipping plane [NUMBER]",
    "Linear": "Linear",
    "Exponential": "Exponential",
    "None": "None",
    
    "d3_setskybox": "set sky [SKYTYPE]",
    "d3_showscene": "show 3D scene [SHOW]", 
    "d3_addeditorcamera": "add editor camera at xyz [X] [Y] [Z] direction [DIRECTION] speed [SPEED] angular speed [ANGULARSPEED]", 
    "d3_addobservercamera": "add observer camera at xyz [X] [Y] [Z] towards xyz [X2] [Y2] [Z2] speed [SPEED]", 
    "d3_addorbitcamera": "add orbit camera distance [DISTANCE] v-angle [VANGLE] h-angle [HANGLE] panning speed ratio [PANSPEEDRATIO] inputs key [WITHKEY] pointer [WITHPOINTER]", 
    "d3_capturepointer": "lock pointer [CAPTURE]",
    "d3_adduniversalcamera": "add first person camera at xyz [X] [Y] [Z] pointer lock [POINTERLOCK]",
    "d3_configureuniversalcamera": "configure first person camera min XYZ [X] [Y] [Z] max XYZ [X2] [Y2] [Z2] visible range min [MINRANGE] max [MAXRANGE] speed ratio moving [PANSPEEDRATIO] angular [ANGULARSPEEDRATIO] damp ratio [DAMPRATIO]",
    "d3_setcameratarget": "set camera target xyz [X] [Y] [Z]",
    "d3_setcameratargetobj": "set camera target object [NAME] offset xyz [X] [Y] [Z]",
    "d3_setcameraparent": "set [NAME] as parent of camera",
    "d3_setcameradirection": "set camera distance [DISTANCE] v-angle [VANGLE] h-angle [HANGLE] z offset [ZOFFSET] target xyz [X] [Y] [Z] in [PERIOD] seconds", 
    "d3_setcameraonglobe": "set camera distance [DISTANCE] [DIR1] [D1]° [M1]' [S1]\" [DIR2] [D2]° [M2]' [S2]\" in [PERIOD] seconds", 
    "d3_configureorbitcamera": "configure camera radius min [MINDIST] max [MAXDIST] visible range min [MINRANGE] max [MAXRANGE] v-angle min [MINVANGLE] max [MAXVANGLE] speed ratio panning [PANSPEEDRATIO] angular [ANGULARSPEEDRATIO]",
    "d3_carfollowcamera": "add follow camera distance [DISTANCE] z offset [ZOFFSET] v-angle [VANGLE] h-angle [HANGLE] direction lock [DIRECTIONTYPE] see-through [TRANS]%",
    "d3_cameradirection": "camera [PROPERTY]",
    "d3_addhatcamera": "add hat camera with offset xyz [X] [Y] [Z]", 
    "d3_addpointlight": "add point light [COLOR] at xyz [X] [Y] [Z] intensity [INTENSITY] show position [SHOW] as [NAME]",
    "d3_adddirectionallight": "add directional light [COLOR] in direction xyz [X] [Y] [Z] at xyz [X2] [Y2] [Z2] intensity [INTENSITY] as [NAME]", 
    "d3_addhemisphericlight": "add ambient light [COLOR] sky direction xyz [X] [Y] [Z] intensity [INTENSITY] as [NAME]",
    "d3_addspotlight": "add spot light [COLOR] at xyz [X] [Y] [Z] open angle [ANGLE] intensity [INTENSITY] blur [DECAY] show position [SHOW] as [NAME]", 
    "d3_castshadowfromlight": "cast shadow from light named [NAME]", 
    "d3_receiveshadow": "receives shadow [SHOW]",
    "d3_addglowgroup": "create glow layer intensity [INTENSITY] blur size [BLURSIZE] as [NAME]", 
    "d3_addtoglowgroup": "add to glow layer named [NAME]",
    "d3_removefromglowgroup": "remove from glow layer named [NAME]",
    "d3_addhighlightgroup": "create highlight layer blur size [BLURSIZE] as [NAME]", 
    "d3_addtohighlightgroup": "add highlight in [COLOR] to layer named [NAME]",
    "d3_removefromhighlightgroup": "remove from highlight layer named [NAME]",
    
    "d3_removelights": "remove all lights", 
    "d3_removeonelight": "remove light named [NAME]",
    "d3_switchlightonoff": "switch [ONOFF] light named [NAME]",
    "d3_excludeobjfromlight": "exclude object [OBJ] from light named [NAME]",
    "d3_pickedname": "picked object name", 
    "d3_draggedname": "dragged object name",
    "d3_pickedspritename": "picked sprite name", 
    "d3_pickedx": "picked point x pos",
    "d3_pickedy": "picked point y pos", 
    "d3_pickedz": "picked point z pos", 
    "d3_hoveredname": "hovered object name", 
    "d3_phoveredname": "prev hovered object name", 
    "d3_hoveredspritename": "hovered sprite name", 
    "d3_hoverednameend": "previously hovered object name", 
    "d3_hoveredspritenameend": "previously hovered sprite name", 
    "d3_hoveredx": "hovered point x pos",
    "d3_hoveredy": "hovered point y pos", 
    "d3_hoveredz": "hovered point z pos", 
    "d3_showaxis": "show 3D axis [SHOW] length [LEN]", 
    "d3_showlocalaxis": "show local axis [SHOW] length [LEN]",
    "d3_webcambackground": "turn [ONOFF] webcam background [CAMERA] in [CAMERA_MODE] mode",
    "d3_addtube": "add tube [COLOR] diameter top [DIAMETERTOP] bottom [DIAMETERBOTTOM] height [HEIGHT] arc [ARC] closed section [CLOSED] cap type [CAPTYPE] sides [SIDES] thickness [THICKNESS] as [NAME]", 
    "d3_addrecttube": "add rectangle tube [COLOR] size in X [X] Y [Y] height [HEIGHT] cap type [CAPTYPE] thickness [THICKNESS] sides [SIDES] as [NAME]",
    "d3_addstairs": "add stairs [COLOR] width [X] depth [Y] height [HEIGHT] count [COUNT] thickness [THICKNESS] type [STAIRTYPE] as [NAME]",
    "d3_addcapsule": "add capsule [COLOR] diameter top [DIAMETERTOP] bottom [DIAMETERBOTTOM] height [HEIGHT] sides [SIDES] as [NAME]",
    "d3_addtorus": "add torus [COLOR] diameter [DIAMETER] thickness [THICKNESS] sides [SIDES] as [NAME]", 
    "d3_addcolumn": "add column [COLOR] 2D vertex list [LIST] height [HEIGHT] cap type [CAPTYPE] as [NAME]", 
    "d3_addframe": "add frame [COLOR] edge count [EDGES] length [EDGELENGTH] thickness [THICKNESS] as [NAME]",
    "d3_addcone": "add cone [COLOR] vertex list [LIST] height [HEIGHT] as [NAME]", 
    "d3_addobject": "add model [OBJECTNAME] target height [HEIGHT] origin offset xyz [X] [Y] [Z] rotation xyz [RX] [RY] [RZ] hidden [HIDDEN] as [NAME]",
    "d3_exportglb": "export object [NAME] as a GLB file",
    "d3_exportstl": "export object [NAME] as an STL file",
    "d3_exportboj": "export object [NAME] as an OBJ file and an MTL file",
    "d3_selectobject": "select sprite object by name [NAME]",
    "d3_addlinkobject": "add public object by URL [OBJECTNAME] as [NAME]", 
    "d3_addcharacter": "add character [CHARACTERNAME] as [NAME]",
    "d3_addavatar": "add avatar [CHARACTERNAME] height [HEIGHT] as [NAME] hidden [HIDDEN]",
    "d3_addavatarforuser": "add avatar [AVATAR_NAME] for user [USERNAME] height [HEIGHT] as [NAME] hidden [HIDDEN]",
    "d3_addanimation": "add animations [ANIMATIONS]",
    "d3_startanimation": "start animation [ANIMATIONNAME] looping [LOOPING] progress from [STARTFRAME] to [ENDFRAME] speed ratio [SPEEDRATIO] [BLOCKING] broadcast [BROADCASTMESSAGE] at progress [PROGRESSLIST]", 
    "d3_startanimation2": "start model animation [ANIMATIONNAME] looping [LOOPING] progress from [STARTFRAME] to [ENDFRAME] speed ratio [SPEEDRATIO] [BLOCKING] broadcast [BROADCASTMESSAGE] at progress [PROGRESSLIST]", 
    "d3_stopanimation": "stop animation",
    "d3_addplane": "add plane [COLOR] size x [SIZEX] y [SIZEY] as [NAME]", 
    "d3_addabcdplane": "add plane [COLOR] width [SIZEX] height [SIZEY] coefficients abcd [A] [B] [C] [D] as [NAME]", 
    "d3_add3pplane": "add triangle [COLOR] from points xyz1 [X1] [Y1] [Z1] xyz2 [X2] [Y2] [Z2] xyz3 [X3] [Y3] [Z3] as [NAME]",
    "d3_add4pplane": "add quadrilateral [COLOR] from points xyz1 [X1] [Y1] [Z1] xyz2 [X2] [Y2] [Z2] xyz3 [X3] [Y3] [Z3] xyz4 [X4] [Y4] [Z4] as [NAME]",
    
    "d3_addtrianglefrompoints": "geometry: add triangle from points [OBJ1] [OBJ2] [OBJ3] color [COLOR] as [NAME]",
    "d3_addframebox": "geometry: add frame box color [COLOR] size in x [SIZEX] y [SIZEY] z [SIZEZ] thickness [THICKNESS] labels [LABELS] as [NAME]",
    "d3_addlinebetweenpoints": "geometry: add line between points [OBJ1] [OBJ2] color [COLOR] diameter [DIAMETER] arrow [ARROWHEAD] sides [SIDES] segments [SEGCOUNT] as [NAME]",
    "d3_addnewpoint": "geometry: add point between points [OBJ1] [OBJ2] at [PCT]% color [COLOR] size [SIZE] as [NAME]",
    "d3_addxyzpoint": "geometry: add point at xyz [X] [Y] [Z] color [COLOR] size [SIZE] on [ORIGOBJ] as [NAME]",

    "d3_addAtom": "chemistry: add atom [ATOMTYPE] as [NAME] connect hole [HOLE] to atom [ATOM2] hole [HOLE2] distance [BONDLEN]",
    "d3_addcustomeatom": "chemistry: add custom atom [COLOR] size [SIZE] holes [HOLESPEC] label [LABEL] angle [LABELANGLE] as [NAME] connect hole [HOLE] to atom [ATOM2] hole [HOLE2] distance [BONDLEN]",

    "d3_convertobjecttomirror": "build mirror brightness [CLARITY] using object as [NAME]",
    "d3_setvisibleinmirror": "reflect in mirror [NAME]", 
    "d3_clearmirrorreflect": "remove all reflections in mirror [NAME]", 
    "d3_addsolidline": "add line [COLOR] diameter [DIAMETER] cap [CAPTYPE] arrow [ARROWHEAD] sides [SIDES] xyz from [X] [Y] [Z] to [X2] [Y2] [Z2] segments [SEGCOUNT] as [NAME]", 
    "d3_adddottedline": "add dotted line [COLOR] diameter [DIAMETER] segment length [SEGLEN] gap length [GAPLEN] cap [CAPTYPE] arrow [ARROWHEAD] sides [SIDES] from xyz [X] [Y] [Z] to xyz [X2] [Y2] [Z2] as [NAME]",
    "d3_generatearcpoints": "generate arc points from [X] [Y] [Z] via [X2] [Y2] [Z2] to [X3] [Y3] [Z3] into list [LISTNAME] count [COUNT]",
    "d3_addcurveusinglist": "add curve [COLOR] diameter [DIAMETER] cap [CAPTYPE] arrow [ARROWHEAD] sides [SIDES] using list [LISTNAME] from [STARTIND] to [ENDIND] segments [SEGCOUNT] as [NAME]",
    "d3_addbox": "add box [COLOR] size in x [SIZEX] y [SIZEY] z [SIZEZ] edge radius [RADIUS] as [NAME]", 
    "d3_addtext": "add 3D text [TEXT] font [FONT] color [COLOR] width [WIDTH] height [HEIGHT] diameter [CURVED] camera facing [FORWARD] as [NAME]", 
    "d3_add6box": "add 6-colored box [COLOR1] [COLOR2] [COLOR3] [COLOR4] [COLOR5] [COLOR6] size in x [SIZEX] y [SIZEY] z [SIZEZ] as [NAME]", 
    "d3_addsphere": "add sphere [COLOR] size in x [SIZEX] y [SIZEY] z [SIZEZ] arc [ARC] slice [SLICE] sides [SIDES] as [NAME]",
    "d3_addcylinder": "add cylinder [COLOR] diameter top [DIAMETERTOP] bottom [DIAMETERBOTTOM] height [HEIGHT] arc [ARC] closed section [CLOSED] cap type [CAPTYPE] sides [SIDES] as [NAME]", 
    "d3_addtransformnode": "add transformer as [NAME]",
    "d3_setasparent": "set object [PARENTNAME] from sprite [SPRITE] as parent",
    "d3_setcameraasparent": "set camera as parent",
    "d3_setasocclusion": "convert to transparent occlusion",
    "d3_turnonvr": "switch to VR camera",
    "d3_setscenephysics": "enable physics for scene with gravity [GRAVITY]",
    "d3_updatephysics": "add [SHAPE] physics body with mass [MASS] restitution [RESTITUTION]% friction [FRICTION]% frozen [YESNO] debug [ISDEBUG] [COLOR]",
    "d3_removephysics": "remove physics body",
    "d3_mergephysics": "add physics bodies of [CHILDREN] into compound [NAME] keep object [KEEPOBJ]",
    "d3_setasphysicsparent": "set object [PARENTNAME] from sprite [SPRITE] as parent for physics",
    "d3_setphysicslinearvelocity": "set physics object speed in xyz [X] [Y] [Z] for [NAME]",
    "d3_setphysicsangularvelocity": "set physics object rotation speed around xyz axes [X] [Y] [Z] for [NAME]",
    "d3_getphysicsdata": "get physics object [SPEEDTYPE] for [NAME]",
    "d3_applyimpulse": "apply impulse strength in xyz [X] [Y] [Z] at position xyz [X2] [Y2] [Z2] to [NAME]",
    "d3_broadcastcollisionmessage": "broadcast message [BROADCAST_INPUT] on collision between physics object [NAME] and [NAME2]",
    "d3_setphysicsframerate": "set physics frame rate [RATE] for [NAME]",
    "d3_getphysicsframerate": "get physics frame rate for [NAME]",
    "d3_freezeallphysics": "freeze all physics objects [YESNO]",
    "d3_freezeonephysics": "freeze physics object named [NAME] [YESNO]",
    "d3_attachtobone": "attach to body part [BODYPART] of [PARENTNAME] from sprite [SPRITE] target height [HEIGHT]",
    "d3_detachfrombone": "detach from body",
    "d3_updateBone": "update bone [BODYPART] offset [X] [Y] [Z] rotation [X2] [Y2] [Z2]",
    "d3_removeparent": "unlink parent", 
    "d3_removechildren": "unlink all children",
    "d3_removeobject": "remove object named [NAME]",
    "d3_removeallobjects": "remove all objects",
    "d3_showbounds": "show bounding box [SHOW]",
    "d3_showedges": "show edges [SHOW] color [EDGECOLOR] thickness [EDGETHICK]",
    "d3_updatecolor": "update color diffusion [COLOR] emission [COLOR2] roughness [ROUGHNESS] brightness [BRIGHTNESS] remove texture [REMOVETEXTURE] area [COMPONENT]",
    "d3_getobjectcolor": "get [COLORTYPE] color of object named [NAME]",
    "diffusion": "Diffusion",
    "emission": "Emission",
    "d3_updatetexture": "update texture [TEXTURE] unit size [SIZE] non-box repeat h [REPEATU] v [REPEATV] rotation [ANGLEW] area [COMPONENT]", 
    "d3_updatecostumetexture": "update texture using costume [COSTUME] unit size [SIZE] non-box repeat h [REPEATU] v [REPEATV] rotation [ANGLEW] area [COMPONENT]", 
    "d3_animatetextureframes": "animate texture spritesheet frames [FRAMECOUNT] row size [ROWSIZE] FPS [FRAMERATE] area [COMPONENT]",
    "d3_isgpusupported": "GPU Available",
    "d3_objectexists": "object [NAME] exists",
    "d3_getCameraXY": "get camera view position for xyz [X] [Y] [Z]",
    "d3_converttosps": "convert to sps at xyz [LIST] updatable [UPDATABLE]",
    "d3_createemitter": "add particle emitter shape [EMITTERTYPE] texture [TEXTURE] facing camera [FACINGCAMERA] life min [MINLIFE] max [MAXLIFE] capacity [CAP] GPU [USEGPU] time ratio [UPDATESPEED]% as [NAME]",
    "d3_addgenerator": "add prebuilt emitter for [GENTYPE] [COLOR1] [COLOR2] capacity [CAP] texture size [SIZE] source size [SOURCESIZE] speed [SPEED] max life [MAXLIFE] as [NAME]",
    "d3_addtrail": "add trail diffusion [COLOR] emission [COLOR2] width [WIDTH] segments [LENGTH] as [NAME]",
    "d3_turnonarcamera": "turn on AR ground size [SIZE] color [COLOR]",
    "d3_usearcontrolcamera": "switch to AR world camera scale [SCALE] emulation mode [SIMULATOR]",
    "d3_usearfacecamera": "switch to AR face camera show marker [SHOW] scale [SCALE] emulation mode [SIMULATOR] data table [INFO_TABLE] with mesh of face [SHOWFACE] eyes [SHOWEYE] mouth [SHOWMOUTH] lips [SHOWLIP]",
    "d3_usearimagecameralogoanchor": "switch to AR LOGO as [TYPE] camera [CAMTYPE] marker [SHOW] scale [SCALE] emulation [SIMULATOR]",
    "d3_usearimagecamera": "switch to AR camera [CAMTYPE] for logo as [TYPE] show marker [SHOW] scale [SCALE] emulation mode [SIMULATOR]",
    "floor": "Floor",
    "wall" : "Wall",
    "fire": "Fire",
    "smoke": "Smoke",
    "spark": "Spark",
    "halo": "Halo",
    "water": "Water",
    "light": "Light",
    "pointemitter": "Point",
    "boxemitter": "Box",
    "sphereemitter": "Sphere",
    "hemisphericemitter": "Hemisphere",
    "cylinderemitter": "Cylinder",
    "coneemitter": "Cone",
    "meshemitter": "Mesh",
    "d3_updateemittermovement": "configure emitter [NAME] movement: speed min [MINSPEED] max [MAXSPEED] direction 1 [X1] [Y1] [Z1] direction 2 [X2] [Y2] [Z2]",
    "d3_fireemitter": "start emitter [NAME] [RATEORCOUNT] of [COUNT]",
    "byrate": "at rate",
    "bycount": "for one-time count",
    "d3_updateemittercolor": "configure emitter [NAME] color: start ([STARTCOLOR1] to [STARTCOLOR2]) end ([ENDCOLOR1] to [ENDCOLOR2]) at progress [MIDDLETIME]% ([MIDDLECOLOR1] to [MIDDLECOLOR2])",
    "d3_updateemittersize": "configure emitter [NAME] size: start ([STARTSIZE1] to [STARTSIZE2]) end ([ENDSIZE1] to [ENDSIZE2]) at progress [MIDDLETIME]% ([MIDDLESIZE1] to [MIDDLESIZE2])",
    "d3_updateemitterscale": "configure emitter [NAME] scale: x min [XMIN]% max [XMAX]% y min [YMIN]% max [YMAX]%",
    "d3_updateemitterrotation": "configure emitter [NAME] rotation: start ([STARTROTATION1] to [STARTROTATION2]) end ([ENDROTATION1] to [ENDROTATION2]) at progress [MIDDLETIME]% ([MIDDLEROTATION1] to [MIDDLEROTATION2])",
    "d3_updateboxemitter": "configure box emitter [NAME]: min xyz [X1] [Y1] [Z1] max xyz [X2] [Y2] [Z2]",
    "d3_updatesphereemitter": "configure sphere emitter [NAME]: radius [RADIUS] range [RADIUSRANGE]",
    "d3_updatehemisphericemitter": "configure hemispheric emitter [NAME]: radius [RADIUS] range [RADIUSRANGE]",
    "d3_updatecylinderemitter": "configure cylinder emitter [NAME]: radius [RADIUS] range [RADIUSRANGE] height [HEIGHT] direction randomness [DIRRANDOM]%",
    "d3_updateconeemitter": "configure cone emitter [NAME]: radius [RADIUS] angle [ANGLE]",
    "d3_updatemeshemitter": "configure mesh emitter [NAME]: use mesh normal direction [USENORMAL]",
    "d3_emittercommand": "[COMMAND] emitter [NAME]",
    "stop": "Stop",
    "dispose": "Dispose",

    "d3_updatefiletexture": "add texture with shared file [TEXTURE] box unit size [SIZE] non-box repeat h [REPEATU] v [REPEATV] rotation [ANGLEW] area [COMPONENT]", 
    "d3_materialsetting": "material setting: wireframe mode [ISWIREFRAME] draw back face [ISBACKFACE] z-offset [ZOFFSET] log depth [ISLOGDEPTH] transparent [TRANS]", 
    "d3_applygridmaterial": "apply grid material face [FACECOLOR] line [LINECOLOR] density [LINECOUNT] minor line visibility [MINOR]% desplazamiento de línea xyz [XOFFSET] [YOFFSET] [ZOFFSET]",
    "d3_setrenderinggroup": "set rendering layer [LAYERID]",
    "d3_lockfacing": "set camera facing mode [FACEMODE]", 
    
    "d3_updatescale": "update scale x [X]% y [Y]% z [Z]% in [PERIOD] seconds [BLOCKING]", 
    "d3_updatescale2": "update size X [X] Y [Y] z [Z]", 
    "d3_subdivideface": "subdivide faces by [MULTIPLE]",
    "d3_shiftvertices": "update vertices scale xyz [XS] [YS] [ZS] move xyz [XM] [YM] [ZM] position min xyz [MINX] [MINY] [MINZ] max xyz [MAXX] [MAXY] [MAXZ]",
    "d3_movetoxyz": "move to X [X] Y [Y] z [Z] in [PERIOD] seconds [BLOCKING]", 
    "d3_rotateto": "rotate to angle [DIRECTIONVALUE] around the [AXIS] axis in [PERIOD] seconds", 
    "d3_rotateto2": "rotate to direction X [X] Y [Y] z [Z] in [PERIOD] seconds [BLOCKING]",
    "d3_3dturnto": "turn [DEGREES] degrees around the [AXIS] axis in [PERIOD] seconds", 
    "d3_3dpointto": "point to position x [X] y [Y] z [Z] in [PERIOD] seconds [BLOCKING]",
    "d3_movealongdir": "move [DIST] along current direction in [PERIOD] seconds [BLOCKING]",
    "d3_copycameradirection": "copy direction from camera",
    "d3_copycameraposition": "copy position from camera",
    "d3_setrotationpivot": "set pivot point X [X] Y [Y] z [Z]",
    "d3_clearpivot": "clear pivot point",
    "d3_setmovingmode": "set moving mode [MODE]", 
    "d3_setspeed": "set speed [SPEEDTYPE] to [SPEED]", 
    "d3_carveobject": "carve [NAME1] with [NAME2]",
    "d3_objectintersecting": "objects [NAME1] and [NAME2] are overlapping",
    "d3_mergeobject": "merge [NAME2] into [NAME1]", 
    "d3_cloneobject": "copy object share data [SHARE] as [NAME]", 
    "d3_rotationcopy": "copy to rotated position around the [AXIS] axis count [COUNT] degree step [STEP] shift XYZ [X] [Y] [Z]",
    "d3_vrotationcopy": "copy to rotated position around vector xyz [VX] [VY] [VZ] count [COUNT] degree step [STEP] shift XYZ [X] [Y] [Z]",
    "d3_mirrorcopy": "copy to mirror position [MIRRORTYPE]",
    "d3_doadd_addinstancematrix": "copy by matrix count in xyz [X2] [Y2] [Z2] spacing in xyz [SPACINGX] [SPACINGY] [SPACINGZ] random ratio in spacing [SPACINGRANDOM]% scale [SCALERANDOM]% z-rotation [ROTRANDOM]%  [AVOIDMODE] object [AVOIDNAME]", 
    "d3_turnondistancesensor": "set distance sensor front [ISFRONT] back [ISBACK] left [ISLEFT] right [ISRIGHT] down [ISDOWN] up [ISUP] max distance [LEN] count [COUNT] visible [ISVISIBLE]",
    "d3_objectdistance": "distance between objects [NAME1] and [NAME2]",
    "d3_setcollision": "turn on [ISBLOCKING] collision with [SPRITE] collider z offset [ZCENTER] precision [PRECISION] debug [ISDEBUG]", 
    "d3_setcollisiondimension": "update collider dimension x [WIDTH] y [DEPTH] z [HEIGHT] collider z offset [ZCENTER] sensing range x [RX] y [RY] z [RZ] color [COLOR]",
    "d3_whenincollision": "when colliding with [SPRITE]",
    "d3_enablecamerapicking": "turn on picking with [POINTERTYPE] for objects created in sprites [SPRITENAMES]",
    "d3_enablecamerahovering": "turn on hovering for objects created in sprites [SPRITENAMES]",
    "d3_disablecamerapicking": "turn off picking for objects created in sprites [SPRITENAMES]",
    "d3_disablecamerahovering": "turn off hovering for objects created in sprites [SPRITENAMES]",
    "d3_disablehoveringignforobject": "disable hovering for objects named [OBJECTNAMES]",
    "d3_enablehoveringignforobject": "enable hovering for objects named [OBJECTNAMES]",
    "d3_whenobjectpicked": "when an object from this sprite is picked",
    "d3_setdraggingmode": "set dragging mode [DRAGGINGMODE] direction X [X] Y [Y] z [Z]",
    "d3_setdragginglimit": "set dragging limits min xyz [X] [Y] [Z] max xyz [X2] [Y2] [Z2]",
    "d3_whenobjectstartdragged": "when an object from this sprite starts to be dragged",
    "d3_whenobjectbeingdragged": "when an object from this sprite is being dragged",
    "d3_whenobjectenddragged": "when an object from this sprite stops being dragged",
    "d3_whenobjecthovered": "when an object from this sprite starts being hovered",
    "d3_whenobjecthoveredend": "when an object from this sprite stops being hovered",
    "d3_bakecurrenttransformation": "bake current transformations", 
    "d3_spritename": "sprite object name", 
    "d3_spritescalex": "sprite object scale x", 
    "d3_spritescaley": "sprite object scale y", 
    "d3_spritescalez": "sprite object scale z", 
    "d3_spritesizex": "sprite object x size", 
    "d3_spritesizey": "sprite object y size", 
    "d3_spritesizez": "sprite object z size", 
    "d3_spriteminx": "sprite object min x", 
    "d3_spriteminy": "sprite object min y", 
    "d3_spriteminz": "sprite object min z", 
    "d3_spritemaxx": "sprite object max x", 
    "d3_spritemaxy": "sprite object max y", 
    "d3_spritemaxz": "sprite object max z", 
    
    "d3_spritex": "sprite object x position", 
    "d3_spritey": "sprite object y position", 
    "d3_spritez": "sprite object z position", 
    "d3_spritexrot": "sprite object x rotation", 
    "d3_spriteyrot": "sprite object y rotation",
    "d3_spritezrot": "sprite object z rotation",
    "d3_spritespeedforward": "sprite object forward speed",
    "d3_spritespeedsidemove": "sprite object size move speed",
    "d3_spritespeedrising": "sprite object rising speed",
    "d3_spritespeedforwardacc": "sprite object forward acceleration speed",
    "d3_spritespeedgravity": "sprite object gravity",
    "d3_spritespeedrotationx": "sprite object x rotation speed",
    "d3_spritespeedrotationy": "sprite object y rotation speed",
    "d3_spritespeedrotationz": "sprite object z rotation speed",

    "d3_spriteblockedfront": "sprite object blocked front",
    "d3_spriteblockedback": "sprite object blocked back",
    "d3_spriteblockedbelow": "sprite object blocked below",
    "d3_spriteblockedabove": "sprite object blocked above",
    "d3_spriteblockedleft": "sprite object blocked left",
    "d3_spriteblockedright": "sprite object blocked right",
    "d3_distancetonearest": "distance to nearest obstacle in the [TARGET] direction for [NAME]",
    "d3_nearestobstaclename": "name of nearest obstacle in the [TARGET] direction for [NAME]",
    "d3_objectproperty": "[OBJECTPROPERTY] of object [OBJECTNAME] from sprite [SPRITENAME]",
    "d3_distancefront": "distance to obstacle in the front", 
    "d3_distanceback": "distance to obstacle in the back", 
    "d3_distancebottom": "distance to obstacle below", 
    "d3_distanceup": "distance to obstacle above", 
    "d3_distanceleft": "distance to obstacle to the left", 
    "d3_distanceright": "distance to obstacle to the right",
    "d3_extrude2": "extrude costume [COSTUME] thickness [HEIGHT] side color [COLOR] granularity [GRAN] as [NAME]",
    "d3_extrude3": "extrude costume [COSTUME] tiles width [TW] height [TH] row [TX] col [TY] thickness [HEIGHT] side color [COLOR] granularity [GRAN] as [NAME]",
    "d3_addcube": "add voxel size in xyz [SIZEX] [SIZEY] [SIZEZ] with costumes top [TOP] bottom [BOTTOM] front [FRONT] back [BACK] left [LEFT] right [RIGHT] texture size [TEXTURELEN] sampling [SAMPLINGMETHOD] as [NAME]",
    "d3_addcommunityobject": "add community model [OBJECTNAME] target height [HEIGHT] rotation [RX] [RY] [RZ] origin offset [X] [Y] [Z] as [NAME]",
    "d3_pauseanimation": "pause animation",
    "d3_showinspector": "show inspector [SHOW]",
    "communityObjectNotFound": "Model {modelName} is currently private or does not exist",
    "d3_switchFullScreen": "switch to full screen [BORDERTYPE] border",
    "d3_set_property": "set property [PROPERTY_NAME] to [PROPERTY_VALUE] for [OBJECT_NAME] in model named [MODEL_NAME]",
    "d3_property": "property [PROPERTY_NAME] of [OBJECT_NAME] in model named [MODEL_NAME]",
    "d3_foreachproperty": "for each property named [PROPERTY_NAME] with value [PROPERTY_VALUE] for [OBJECT_NAME] in model named [MODEL_NAME]",
    "d3_for_each_cloned_d3_object": "for each 3D object named [OBJECT_NAME]",
    "database.categoryName": "Database",
    "database.createCollectionBtn": "Create a Collection"
}