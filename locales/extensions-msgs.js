// GENERATED FILE:
export default {
  "en": {
    "boost.color.any": "any color",
    "boost.color.black": "black",
    "boost.color.blue": "blue",
    "boost.color.green": "green",
    "boost.color.red": "red",
    "boost.color.white": "white",
    "boost.color.yellow": "yellow",
    "boost.getMotorPosition": "motor [MOTOR_REPORTER_ID] position",
    "boost.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "boost.motorDirection.backward": "that way",
    "boost.motorDirection.forward": "this way",
    "boost.motorDirection.reverse": "reverse",
    "boost.motorOff": "turn motor [MOTOR_ID] off",
    "boost.motorOn": "turn motor [MOTOR_ID] on",
    "boost.motorOnFor": "turn motor [MOTOR_ID] for [DURATION] seconds",
    "boost.motorOnForRotation": "turn motor [MOTOR_ID] for [ROTATION] rotations",
    "boost.seeingColor": "seeing [COLOR] brick?",
    "boost.setLightHue": "set light color to [HUE]",
    "boost.setMotorDirection": "set motor [MOTOR_ID] direction [MOTOR_DIRECTION]",
    "boost.setMotorPower": "set motor [MOTOR_ID] speed to [POWER] %",
    "boost.tiltDirection.any": "any",
    "boost.tiltDirection.down": "down",
    "boost.tiltDirection.left": "left",
    "boost.tiltDirection.right": "right",
    "boost.tiltDirection.up": "up",
    "boost.whenColor": "when [COLOR] brick seen",
    "boost.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
    "ev3.beepNote": "beep note [NOTE] for [TIME] secs",
    "ev3.buttonPressed": "button [PORT] pressed?",
    "ev3.getBrightness": "brightness",
    "ev3.getDistance": "distance",
    "ev3.getMotorPosition": "motor [PORT] position",
    "ev3.motorSetPower": "motor [PORT] set power [POWER] %",
    "ev3.motorTurnClockwise": "motor [PORT] turn this way for [TIME] seconds",
    "ev3.motorTurnCounterClockwise": "motor [PORT] turn that way for [TIME] seconds",
    "ev3.whenBrightnessLessThan": "when brightness < [DISTANCE]",
    "ev3.whenButtonPressed": "when button [PORT] pressed",
    "ev3.whenDistanceLessThan": "when distance < [DISTANCE]",
    "gdxfor.getAcceleration": "acceleration [DIRECTION]",
    "gdxfor.getForce": "force",
    "gdxfor.getSpin": "spin speed [DIRECTION]",
    "gdxfor.getTilt": "tilt angle [TILT]",
    "gdxfor.isFreeFalling": "falling?",
    "gdxfor.isTilted": "tilted [TILT]?",
    "gdxfor.pulled": "pulled",
    "gdxfor.pushed": "pushed",
    "gdxfor.shaken": "shaken",
    "gdxfor.startedFalling": "started falling",
    "gdxfor.tiltDirectionMenu.any": "any",
    "gdxfor.tiltDirectionMenu.back": "back",
    "gdxfor.tiltDirectionMenu.front": "front",
    "gdxfor.tiltDirectionMenu.left": "left",
    "gdxfor.tiltDirectionMenu.right": "right",
    "gdxfor.turnedFaceDown": "turned face down",
    "gdxfor.turnedFaceUp": "turned face up",
    "gdxfor.whenForcePushedOrPulled": "when force sensor [PUSH_PULL]",
    "gdxfor.whenGesture": "when [GESTURE]",
    "gdxfor.whenTilted": "when tilted [TILT]",
    "makeymakey.downArrow": "down arrow",
    "makeymakey.downArrowShort": "down",
    "makeymakey.leftArrow": "left arrow",
    "makeymakey.leftArrowShort": "left",
    "makeymakey.rightArrow": "right arrow",
    "makeymakey.rightArrowShort": "right",
    "makeymakey.spaceKey": "space",
    "makeymakey.upArrow": "up arrow",
    "makeymakey.upArrowShort": "up",
    "makeymakey.whenKeyPressed": "when [KEY] key pressed",
    "makeymakey.whenKeysPressedInOrder": "when [SEQUENCE] pressed in order",
    "microbit.buttonsMenu.any": "any",
    "microbit.clearDisplay": "clear display",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.displaySymbol": "display [MATRIX]",
    "microbit.displayText": "display text [TEXT]",
    "microbit.gesturesMenu.jumped": "jumped",
    "microbit.gesturesMenu.moved": "moved",
    "microbit.gesturesMenu.shaken": "shaken",
    "microbit.isButtonPressed": "[BTN] button pressed?",
    "microbit.isTilted": "tilted [DIRECTION]?",
    "microbit.pinStateMenu.off": "off",
    "microbit.pinStateMenu.on": "on",
    "microbit.tiltAngle": "tilt angle [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "any",
    "microbit.tiltDirectionMenu.back": "back",
    "microbit.tiltDirectionMenu.front": "front",
    "microbit.tiltDirectionMenu.left": "left",
    "microbit.tiltDirectionMenu.right": "right",
    "microbit.whenButtonPressed": "when [BTN] button pressed",
    "microbit.whenGesture": "when [GESTURE]",
    "microbit.whenPinConnected": "when pin [PIN] connected",
    "microbit.whenTilted": "when tilted [DIRECTION]",
    "music.categoryName": "Music",
    "music.changeTempo": "change tempo by [TEMPO]",
    "music.drumBass": "(2) Bass Drum",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Cabasa",
    "music.drumClaves": "(9) Claves",
    "music.drumClosedHiHat": "(6) Closed Hi-Hat",
    "music.drumConga": "(14) Conga",
    "music.drumCowbell": "(11) Cowbell",
    "music.drumCrashCymbal": "(4) Crash Cymbal",
    "music.drumCuica": "(18) Cuica",
    "music.drumGuiro": "(16) Guiro",
    "music.drumHandClap": "(8) Hand Clap",
    "music.drumOpenHiHat": "(5) Open Hi-Hat",
    "music.drumSideStick": "(3) Side Stick",
    "music.drumSnare": "(1) Snare Drum",
    "music.drumTambourine": "(7) Tambourine",
    "music.drumTriangle": "(12) Triangle",
    "music.drumVibraslap": "(17) Vibraslap",
    "music.drumWoodBlock": "(10) Wood Block",
    "music.getTempo": "tempo",
    "music.instrumentBass": "(6) Bass",
    "music.instrumentBassoon": "(14) Bassoon",
    "music.instrumentCello": "(8) Cello",
    "music.instrumentChoir": "(15) Choir",
    "music.instrumentClarinet": "(10) Clarinet",
    "music.instrumentElectricGuitar": "(5) Electric Guitar",
    "music.instrumentElectricPiano": "(2) Electric Piano",
    "music.instrumentFlute": "(12) Flute",
    "music.instrumentGuitar": "(4) Guitar",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Music Box",
    "music.instrumentOrgan": "(3) Organ",
    "music.instrumentPiano": "(1) Piano",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saxophone",
    "music.instrumentSteelDrum": "(18) Steel Drum",
    "music.instrumentSynthLead": "(20) Synth Lead",
    "music.instrumentSynthPad": "(21) Synth Pad",
    "music.instrumentTrombone": "(9) Trombone",
    "music.instrumentVibraphone": "(16) Vibraphone",
    "music.instrumentWoodenFlute": "(13) Wooden Flute",
    "music.midiPlayDrumForBeats": "play drum [DRUM] for [BEATS] beats",
    "music.midiSetInstrument": "set instrument to [INSTRUMENT]",
    "music.playDrumForBeats": "play drum [DRUM] for [BEATS] beats",
    "music.playNoteForBeats": "play note [NOTE] for [BEATS] beats",
    "music.restForBeats": "rest for [BEATS] beats",
    "music.setInstrument": "set instrument to [INSTRUMENT]",
    "music.setTempo": "set tempo to [TEMPO]",
    "pen.categoryName": "Pen",
    "pen.changeColorParam": "change pen [COLOR_PARAM] by [VALUE]",
    "pen.changeHue": "change pen color by [HUE]",
    "pen.changeShade": "change pen shade by [SHADE]",
    "pen.changeSize": "change pen size by [SIZE]",
    "pen.clear": "erase all",
    "pen.colorMenu.brightness": "brightness",
    "pen.colorMenu.color": "color",
    "pen.colorMenu.saturation": "saturation",
    "pen.colorMenu.transparency": "transparency",
    "pen.penDown": "pen down",
    "pen.penUp": "pen up",
    "pen.setColor": "set pen color to [COLOR]",
    "pen.setColorParam": "set pen [COLOR_PARAM] to [VALUE]",
    "pen.setHue": "set pen color to [HUE]",
    "pen.setShade": "set pen shade to [SHADE]",
    "pen.setSize": "set pen size to [SIZE]",
    "pen.stamp": "stamp",
    "speech.defaultWhenIHearValue": "let''s go",
    "speech.extensionName": "Speech to Text",
    "speech.listenAndWait": "listen and wait",
    "speech.speechReporter": "speech",
    "speech.whenIHear": "when I hear [PHRASE]",
    "text2speech.alto": "alto",
    "text2speech.categoryName": "Text to Speech",
    "text2speech.defaultTextToSpeak": "hello",
    "text2speech.giant": "giant",
    "text2speech.kitten": "kitten",
    "text2speech.setLanguageBlock": "set language to [LANGUAGE]",
    "text2speech.setVoiceBlock": "set voice to [VOICE]",
    "text2speech.speakAndWaitBlock": "speak [WORDS]",
    "text2speech.squeak": "squeak",
    "text2speech.tenor": "tenor",
    "translate.categoryName": "Translate",
    "translate.defaultTextToTranslate": "hello",
    "translate.translateBlock": "translate [WORDS] to [LANGUAGE]",
    "translate.viewerLanguage": "language",
    "videoSensing.categoryName": "Video Sensing",
    "videoSensing.direction": "direction",
    "videoSensing.motion": "motion",
    "videoSensing.off": "off",
    "videoSensing.on": "on",
    "videoSensing.onFlipped": "on flipped",
    "videoSensing.setVideoTransparency": "set video transparency to [TRANSPARENCY]",
    "videoSensing.sprite": "sprite",
    "videoSensing.stage": "stage",
    "videoSensing.videoOn": "video [ATTRIBUTE] on [SUBJECT]",
    "videoSensing.videoToggle": "turn video [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "when video motion > [REFERENCE]",
    "wedo2.getDistance": "distance",
    "wedo2.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "wedo2.isTilted": "tilted [TILT_DIRECTION_ANY]?",
    "wedo2.motorDirection.backward": "that way",
    "wedo2.motorDirection.forward": "this way",
    "wedo2.motorDirection.reverse": "reverse",
    "wedo2.motorId.a": "motor A",
    "wedo2.motorId.all": "all motors",
    "wedo2.motorId.b": "motor B",
    "wedo2.motorId.default": "motor",
    "wedo2.motorOff": "turn [MOTOR_ID] off",
    "wedo2.motorOn": "turn [MOTOR_ID] on",
    "wedo2.motorOnFor": "turn [MOTOR_ID] on for [DURATION] seconds",
    "wedo2.playNoteFor": "play note [NOTE] for [DURATION] seconds",
    "wedo2.setLightHue": "set light color to [HUE]",
    "wedo2.setMotorDirection": "set [MOTOR_ID] direction to [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "set [MOTOR_ID] power to [POWER]",
    "wedo2.tiltDirection.any": "any",
    "wedo2.tiltDirection.down": "down",
    "wedo2.tiltDirection.left": "left",
    "wedo2.tiltDirection.right": "right",
    "wedo2.tiltDirection.up": "up",
    "wedo2.whenDistance": "when distance [OP] [REFERENCE]",
    "wedo2.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
    "p2p.categoryName": "Cloud",
    "p2p.createRoom": "create world [ROOMID] with password [PASSWORD] up to [SIZE] users and join as team [TEAM]",
    "p2p.joinroom": "join world [ROOMID] with password [PASSWORD] as team [TEAM]",
    "p2p.leaveroom": "leave world",
    "p2p.broadcast": "broadcast a message [MESSAGE] to [TEAM] team",
    "p2p.receivemessage": "When I receive message from world",
    "p2p.host": "host",
    "p2p.rooms": "worlds",
    "p2p.sender": "sender",
    "p2p.message": "message",
    "p2p.roomUsers": "world users",
    "p2p.teamUsers": "users of [TEAM] team",
    "widget.categoryName": "Pen",
    "widget.addTextbox": "add textbox at X [X] Y [Y] width [WIDTH] height [HEIGHT] line [MULTIPLELINE] scroll [SCROLL] mode [MODE] named [NAME]",
    "widget.valueFromWidget": "value from widget named [NAME]",
    "widget.setText": "set text to [TEXT] for textbox [NAME]",
    "widget.appendText": "append text [TEXT] to textbox [NAME]",
    "widget.addLabel": "add label [TEXT] at X [X] Y [Y] width [WIDTH] height [HEIGHT] named [NAME]",
    "widget.addButton": "add button [TEXT] at X [X] Y [Y] width [WIDTH] height [HEIGHT] tooltip [TOOLTIP] named [NAME]",
    "widget.addDatePicker": "add date picker at X [X] Y [Y] named [NAME]",
    "widget.addColorPicker": "add color picker at X [X] Y [Y] named [NAME]",
    "widget.addSlider": "add slider at X [X] Y [Y] between [MIN] and [MAX] named [NAME]",
    "widget.addMenu": "add menu at X [X] Y [Y] using list [LIST] named [NAME]",
    "widget.whenButtonClicked": "when button named [NAME] clicked",
    "widget.whenWidgetChanges": "when widget named [NAME] changes",
    "widget.setTextStyle": "set text style [FONT] font size [FONTSIZE] text color [TEXTCOLOR] boldness [BOLDNESS] for [NAME]",
    "widget.setWidgetStyle": "set widget background color [BGCOLOR] border color [BORDERCOLOR] border radius [BORDERRADIUS] for [NAME]",
    "widget.removeWidget": "remove widget named [NAME]",
    "widget.removeAllWidgets": "remove all widgets",
    "widget.setVisibility": "set visibility [VISIBILITY] for widget named [NAME]",
    "widget.setVisibilityForAll": "set visibility [VISIBILITY] for all widgets",
    "widget.whenMouseOver": "when pointer is over widget named [NAME]",
    "widget.addImage": "add image [COSTUME] for [NAME]"
  },
  "es": {
    "boost.color.any": "de cualquier color",
    "boost.color.black": "negra",
    "boost.color.blue": "azul",
    "boost.color.green": "verde",
    "boost.color.red": "roja",
    "boost.color.white": "blanca",
    "boost.color.yellow": "amarilla",
    "boost.getMotorPosition": "posición del motor [MOTOR_REPORTER_ID]",
    "boost.getTiltAngle": "ángulo de inclinación hacia [TILT_DIRECTION]",
    "boost.motorDirection.backward": "a un lado",
    "boost.motorDirection.forward": "al otro lado",
    "boost.motorDirection.reverse": "a la inversa",
    "boost.motorOff": "apagar motor [MOTOR_ID]",
    "boost.motorOn": "encender motor [MOTOR_ID]",
    "boost.motorOnFor": "girar motor [MOTOR_ID] [DURATION] segundos",
    "boost.motorOnForRotation": "girar motor [MOTOR_ID] [ROTATION] vueltas",
    "boost.seeingColor": "¿ve pieza [COLOR]?",
    "boost.setLightHue": "fijar color de la luz a [HUE]",
    "boost.setMotorDirection": "fijar dirección del motor [MOTOR_ID] [MOTOR_DIRECTION]",
    "boost.setMotorPower": "fijar velocidad del motor [MOTOR_ID] al [POWER] %",
    "boost.tiltDirection.any": "cualquiera",
    "boost.tiltDirection.down": "abajo",
    "boost.tiltDirection.left": "izquierda",
    "boost.tiltDirection.right": "derecha",
    "boost.tiltDirection.up": "arriba",
    "boost.whenColor": "cuando vea pieza [COLOR]",
    "boost.whenTilted": "al inclinar hacia [TILT_DIRECTION_ANY]",
    "ev3.beepNote": "tocar nota [NOTE] durante [TIME] segundos",
    "ev3.buttonPressed": "¿botón [PORT] presionado?",
    "ev3.getBrightness": "brillo",
    "ev3.getDistance": "distancia",
    "ev3.getMotorPosition": "posición del motor [PORT]",
    "ev3.motorSetPower": "motor [PORT] fijar potencia a [POWER] %",
    "ev3.motorTurnClockwise": "motor [PORT] girar a un lado [TIME] segundos",
    "ev3.motorTurnCounterClockwise": "motor [PORT] girar al otro lado [TIME] segundos",
    "ev3.whenBrightnessLessThan": "cuando brillo < [DISTANCE]",
    "ev3.whenButtonPressed": "al presionar botón [PORT]",
    "ev3.whenDistanceLessThan": "cuando distancia < [DISTANCE]",
    "gdxfor.getAcceleration": "aceleración [DIRECTION]",
    "gdxfor.getForce": "fuerza",
    "gdxfor.getSpin": "velocidad de giro [DIRECTION]",
    "gdxfor.getTilt": "ángulo de inclinación [TILT]",
    "gdxfor.isFreeFalling": "¿cayendo?",
    "gdxfor.isTilted": "¿inclinado [TILT]?",
    "gdxfor.pulled": "empuje",
    "gdxfor.pushed": "tire",
    "gdxfor.shaken": "agitar",
    "gdxfor.startedFalling": "comenzar a caer",
    "gdxfor.tiltDirectionMenu.any": "en cualquier dirección",
    "gdxfor.tiltDirectionMenu.back": "atrás",
    "gdxfor.tiltDirectionMenu.front": "adelante",
    "gdxfor.tiltDirectionMenu.left": "a la izquierda",
    "gdxfor.tiltDirectionMenu.right": "a la derecha",
    "gdxfor.turnedFaceDown": "girar hacia abajo",
    "gdxfor.turnedFaceUp": "girar hacia arriba",
    "gdxfor.whenForcePushedOrPulled": "cuando el sensor de fuerza [PUSH_PULL]",
    "gdxfor.whenGesture": "al [GESTURE]",
    "gdxfor.whenTilted": "al inclinar [TILT]",
    "makeymakey.downArrow": "flecha abajo",
    "makeymakey.downArrowShort": "abajo",
    "makeymakey.leftArrow": "flecha izquierda",
    "makeymakey.leftArrowShort": "izquierda",
    "makeymakey.rightArrow": "flecha derecha",
    "makeymakey.rightArrowShort": "derecha",
    "makeymakey.spaceKey": "espacio",
    "makeymakey.upArrow": "flecha arriba",
    "makeymakey.upArrowShort": "arriba",
    "makeymakey.whenKeyPressed": "al presionar tecla [KEY]",
    "makeymakey.whenKeysPressedInOrder": "al presionar [SEQUENCE] en orden",
    "microbit.buttonsMenu.any": "cualquiera",
    "microbit.clearDisplay": "limpiar pantalla",
    "microbit.defaultTextToDisplay": "¡Hola!",
    "microbit.displaySymbol": "mostrar [MATRIX]",
    "microbit.displayText": "mostrar texto [TEXT]",
    "microbit.gesturesMenu.jumped": "saltar",
    "microbit.gesturesMenu.moved": "mover",
    "microbit.gesturesMenu.shaken": "agitar",
    "microbit.isButtonPressed": "¿botón [BTN] presionado?",
    "microbit.isTilted": "¿inclinado hacia [DIRECTION]?",
    "microbit.pinStateMenu.off": "apagar",
    "microbit.pinStateMenu.on": "encender",
    "microbit.tiltAngle": "ángulo de inclinación hacia [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "cualquiera",
    "microbit.tiltDirectionMenu.back": "atrás",
    "microbit.tiltDirectionMenu.front": "delante",
    "microbit.tiltDirectionMenu.left": "izquierda",
    "microbit.tiltDirectionMenu.right": "derecha",
    "microbit.whenButtonPressed": "al presionar botón [BTN]",
    "microbit.whenGesture": "al [GESTURE]",
    "microbit.whenPinConnected": "al conectar pin [PIN]",
    "microbit.whenTilted": "al inclinar hacia [DIRECTION]",
    "music.categoryName": "Música",
    "music.changeTempo": "cambiar tempo por [TEMPO]",
    "music.drumBass": "(2) Bombo",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Cabasa",
    "music.drumClaves": "(9) Claves",
    "music.drumClosedHiHat": "(6) Charles cerrado",
    "music.drumConga": "(14) Conga",
    "music.drumCowbell": "(11) Cencerro",
    "music.drumCrashCymbal": "(4) Platillo crash",
    "music.drumCuica": "(18) Cuica",
    "music.drumGuiro": "(16) Güiro",
    "music.drumHandClap": "(8) Palmada",
    "music.drumOpenHiHat": "(5) Charles abierto",
    "music.drumSideStick": "(3) Golpe lateral",
    "music.drumSnare": "(1) Caja",
    "music.drumTambourine": "(7) Pandereta",
    "music.drumTriangle": "(12) Triángulo",
    "music.drumVibraslap": "(17) Vibraslap",
    "music.drumWoodBlock": "(10) Caja china",
    "music.getTempo": "tempo",
    "music.instrumentBass": "(6) Bajo",
    "music.instrumentBassoon": "(14) Fagot",
    "music.instrumentCello": "(8) Violonchelo",
    "music.instrumentChoir": "(15) Coro",
    "music.instrumentClarinet": "(10) Clarinete",
    "music.instrumentElectricGuitar": "(5) Guitarra eléctrica",
    "music.instrumentElectricPiano": "(2) Piano eléctrico",
    "music.instrumentFlute": "(12) Flauta",
    "music.instrumentGuitar": "(4) Guitarra",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Caja de música",
    "music.instrumentOrgan": "(3) Órgano",
    "music.instrumentPiano": "(1) Piano",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saxofón",
    "music.instrumentSteelDrum": "(18) Tambor metálico",
    "music.instrumentSynthLead": "(20) Sintetizador melódico",
    "music.instrumentSynthPad": "(21) Sintetizador de fondo",
    "music.instrumentTrombone": "(9) Trombón",
    "music.instrumentVibraphone": "(16) Vibráfono",
    "music.instrumentWoodenFlute": "(13) Flauta de madera",
    "music.midiPlayDrumForBeats": "tocar tambor [DRUM] durante [BEATS] tiempos",
    "music.midiSetInstrument": "fijar instrumento a [INSTRUMENT]",
    "music.playDrumForBeats": "tocar tambor [DRUM] durante [BEATS] tiempos",
    "music.playNoteForBeats": "tocar nota [NOTE] durante [BEATS] tiempos",
    "music.restForBeats": "silencio de [BEATS] tiempos",
    "music.setInstrument": "fijar instrumento a [INSTRUMENT]",
    "music.setTempo": "dar al tempo el valor [TEMPO]",
    "pen.categoryName": "Lápiz",
    "pen.changeColorParam": "cambiar [COLOR_PARAM] de lápiz por [VALUE]",
    "pen.changeHue": "cambiar color de lápiz por [HUE]",
    "pen.changeShade": "cambiar sombra de lápiz por [SHADE]",
    "pen.changeSize": "cambiar tamaño de lápiz por [SIZE]",
    "pen.clear": "borrar todo",
    "pen.colorMenu.brightness": "brillo",
    "pen.colorMenu.color": "color",
    "pen.colorMenu.saturation": "saturación",
    "pen.colorMenu.transparency": "transparencia",
    "pen.penDown": "bajar lápiz",
    "pen.penUp": "subir lápiz",
    "pen.setColor": "fijar color de lápiz a [COLOR]",
    "pen.setColorParam": "fijar [COLOR_PARAM] de lápiz a [VALUE]",
    "pen.setHue": "fijar color de lápiz a [HUE]",
    "pen.setShade": "fijar sombra de lápiz a [SHADE]",
    "pen.setSize": "fijar tamaño de lápiz a [SIZE]",
    "pen.stamp": "sellar",
    "speech.defaultWhenIHearValue": "vamos",
    "speech.extensionName": "Reconocimiento de voz",
    "speech.listenAndWait": "escuchar y esperar",
    "speech.speechReporter": "frase",
    "speech.whenIHear": "cuando oiga [PHRASE]",
    "text2speech.alto": "contralto",
    "text2speech.categoryName": "Texto a voz",
    "text2speech.defaultTextToSpeak": "hola",
    "text2speech.giant": "gigante",
    "text2speech.kitten": "gatito",
    "text2speech.setLanguageBlock": "fijar idioma a [LANGUAGE]",
    "text2speech.setVoiceBlock": "asignar voz a [VOICE]",
    "text2speech.speakAndWaitBlock": "decir [WORDS]",
    "text2speech.squeak": "chillido",
    "text2speech.tenor": "tenor",
    "translate.categoryName": "Traducción",
    "translate.defaultTextToTranslate": "hola",
    "translate.translateBlock": "traducir [WORDS] al [LANGUAGE]",
    "translate.viewerLanguage": "idioma",
    "videoSensing.categoryName": "Sensor de video",
    "videoSensing.direction": "dirección",
    "videoSensing.motion": "movimiento",
    "videoSensing.off": "apagar",
    "videoSensing.on": "encender",
    "videoSensing.onFlipped": "invertir",
    "videoSensing.setVideoTransparency": "fijar transparencia de vídeo a [TRANSPARENCY]",
    "videoSensing.sprite": "objeto",
    "videoSensing.stage": "escenario",
    "videoSensing.videoOn": "[ATTRIBUTE] de vídeo en [SUBJECT]",
    "videoSensing.videoToggle": "[VIDEO_STATE] vídeo",
    "videoSensing.whenMotionGreaterThan": "cuando movimiento de vídeo > [REFERENCE]",
    "wedo2.getDistance": "distancia",
    "wedo2.getTiltAngle": "ángulo de inclinación hacia [TILT_DIRECTION]",
    "wedo2.isTilted": "¿inclinado hacia [TILT_DIRECTION_ANY]?",
    "wedo2.motorDirection.backward": "un lado",
    "wedo2.motorDirection.forward": "otro lado",
    "wedo2.motorDirection.reverse": "inversa",
    "wedo2.motorId.a": "motor A",
    "wedo2.motorId.all": "todos los motores",
    "wedo2.motorId.b": "motor B",
    "wedo2.motorId.default": "motor",
    "wedo2.motorOff": "apagar [MOTOR_ID]",
    "wedo2.motorOn": "encender [MOTOR_ID]",
    "wedo2.motorOnFor": "encender [MOTOR_ID] durante [DURATION] segundos",
    "wedo2.playNoteFor": "tocar nota [NOTE] durante [DURATION] segundos",
    "wedo2.setLightHue": "fijar color de la luz a [HUE]",
    "wedo2.setMotorDirection": "fijar dirección de [MOTOR_ID] a [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "fijar potencia de [MOTOR_ID] a [POWER]",
    "wedo2.tiltDirection.any": "cualquier",
    "wedo2.tiltDirection.down": "abajo",
    "wedo2.tiltDirection.left": "izquierda",
    "wedo2.tiltDirection.right": "derecha",
    "wedo2.tiltDirection.up": "arriba",
    "wedo2.whenDistance": "cuando distancia [OP] [REFERENCE]",
    "wedo2.whenTilted": "al inclinar hacia [TILT_DIRECTION_ANY]",
    "p2p.categoryName": "Nube",
    "p2p.createRoom": "crea el mundo [ROOMID] con la contraseña [PASSWORD] hasta [SIZE] usuarios y únete como equipo [TEAM]",
    "p2p.joinroom": "unirse al mundo [ROOMID] con la contraseña [PASSWORD] como equipo [TEAM]",
    "p2p.leaveroom": "dejar el mundo",
    "p2p.broadcast": "transmitir un mensaje [MESSAGE] al equipo [TEAM]",
    "p2p.receivemessage": "Cuando recibo un mensaje del mundo",
    "p2p.host": "anfitriona",
    "p2p.rooms": "mundos",
    "p2p.sender": "remitente",
    "p2p.message": "mensaje",
    "p2p.roomUsers": "usuarias del mundo",
    "p2p.teamUsers": "usuarias del equipo [TEAM]",
    "widget.categoryName": "Lápiz",
    "widget.addTextbox": "añadir cuadro de texto en X [X] Y [Y] ancho [WIDTH] alto [HEIGHT] línea [MULTIPLELINE] modo de desplazamiento [SCROLL] [MODE] llamado [NAME]",
    "widget.valueFromWidget": "valor del widget llamado [NAME]",
    "widget.setText": "establecer el texto en [TEXT] para el cuadro de texto [NAME]",
    "widget.appendText": "agregar texto [TEXT] al cuadro de texto [NAME]",
    "widget.addLabel": "agregue la etiqueta [TEXT] en X [X] Y [Y] ancho [WIDTH] alto [HEIGHT] llamado [NAME]",
    "widget.addButton": "Agregar botón [TEXT] a X [X] Y [Y] ancho [WIDTH] alto [HEIGHT] información sobre herramientas [TOOLTIP] llamado [NAME]",
    "widget.addDatePicker": "agregar selector de fecha en X [X] Y [Y] llamado [NAME]",
    "widget.addColorPicker": "agregar selector de color en X [X] Y [Y] llamado [NAME]",
    "widget.addSlider": "agregue el control deslizante en X [X] Y [Y] entre [MIN] y [MAX] llamado [NAME]",
    "widget.addMenu": "agregar menú en X [X] Y [Y] usando la lista [LIST] llamada [NAME]",
    "widget.whenButtonClicked": "cuando se hace clic en el botón llamado [NAME]",
    "widget.whenWidgetChanges": "cuando cambia el widget llamado [NAME]",
    "widget.setTextStyle": "establecer estilo de texto [FONT] tamaño de fuente [FONTSIZE] color de texto [TEXTCOLOR] negrita [BOLDNESS] para [NAME]",
    "widget.setWidgetStyle": "establecer el color de fondo del widget [BGCOLOR] el color del borde [BORDERCOLOR] el radio del borde [BORDERRADIUS] para [NAME]",
    "widget.removeWidget": "eliminar el widget llamado [NAME]",
    "widget.removeAllWidgets": "eliminar todos los widgets",
    "widget.setVisibility": "establecer visibilidad [VISIBILITY] para el widget llamado [NAME]",
    "widget.setVisibilityForAll": "establecer visibilidad [VISIBILITY] para todos los widgets",
    "widget.whenMouseOver": "cuando el puntero está sobre el widget llamado [NAME]",
    "widget.addImage": "agregar imagen [COSTUME] para [NAME]"
  },
  "fr": {
    "boost.color.any": "any color",
    "boost.color.black": "noir",
    "boost.color.blue": "bleu",
    "boost.color.green": "vert",
    "boost.color.red": "rouge",
    "boost.color.white": "blanc",
    "boost.color.yellow": "jaune",
    "boost.getMotorPosition": "position du moteur [MOTOR_REPORTER_ID]",
    "boost.getTiltAngle": "angle d'inclinaison [TILT_DIRECTION]",
    "boost.motorDirection.backward": "par là",
    "boost.motorDirection.forward": "par ici",
    "boost.motorDirection.reverse": "inverser",
    "boost.motorOff": "éteindre le moteur [MOTOR_ID]",
    "boost.motorOn": "allumer le moteur [MOTOR_ID]",
    "boost.motorOnFor": "faire tourner le moteur [MOTOR_ID] pendant [DURATION] secondes",
    "boost.motorOnForRotation": "faire tourner le moteur [MOTOR_ID] de [ROTATION] rotations",
    "boost.seeingColor": "seeing [COLOR] brick?",
    "boost.setLightHue": "mettre la couleur de la lampe à [HUE]",
    "boost.setMotorDirection": "mettre la direction du moteur [MOTOR_ID] à [MOTOR_DIRECTION]",
    "boost.setMotorPower": "mettre la vitesse du moteur [MOTOR_ID] à [POWER] %",
    "boost.tiltDirection.any": "n'importe laquelle",
    "boost.tiltDirection.down": "vers le bas",
    "boost.tiltDirection.left": "left",
    "boost.tiltDirection.right": "right",
    "boost.tiltDirection.up": "vers le haut",
    "boost.whenColor": "when [COLOR] brick seen",
    "boost.whenTilted": "quand incliné [TILT_DIRECTION_ANY]",
    "ev3.beepNote": "jouer la note [NOTE] pendant [TIME] secondes",
    "ev3.buttonPressed": "bouton [PORT] appuyé ?",
    "ev3.getBrightness": "luminosité",
    "ev3.getDistance": "distance",
    "ev3.getMotorPosition": "position du moteur [PORT]",
    "ev3.motorSetPower": "mettre la puissance du moteur [PORT] à [POWER] %",
    "ev3.motorTurnClockwise": "motor [PORT] turn this way for [TIME] seconds",
    "ev3.motorTurnCounterClockwise": "motor [PORT] turn that way for [TIME] seconds",
    "ev3.whenBrightnessLessThan": "quand la luminosité < [DISTANCE]",
    "ev3.whenButtonPressed": "quand le bouton [PORT] est appuyé",
    "ev3.whenDistanceLessThan": "quand la distance < [DISTANCE]",
    "gdxfor.getAcceleration": "accélération [DIRECTION]",
    "gdxfor.getForce": "force",
    "gdxfor.getSpin": "vitesse de rotation [DIRECTION]",
    "gdxfor.getTilt": "angle d'inclinaison [TILT]",
    "gdxfor.isFreeFalling": "tombe ?",
    "gdxfor.isTilted": "incliné [TILT] ?",
    "gdxfor.pulled": "tiré",
    "gdxfor.pushed": "poussé",
    "gdxfor.shaken": "secoué",
    "gdxfor.startedFalling": "commençant à tomber",
    "gdxfor.tiltDirectionMenu.any": "n'importe laquelle",
    "gdxfor.tiltDirectionMenu.back": "arrière",
    "gdxfor.tiltDirectionMenu.front": "avant",
    "gdxfor.tiltDirectionMenu.left": "gauche",
    "gdxfor.tiltDirectionMenu.right": "droite",
    "gdxfor.turnedFaceDown": "tourné vers le bas",
    "gdxfor.turnedFaceUp": "tourné vers le haut",
    "gdxfor.whenForcePushedOrPulled": "when force sensor [PUSH_PULL]",
    "gdxfor.whenGesture": "quand [GESTURE]",
    "gdxfor.whenTilted": "quand incliné [TILT]",
    "makeymakey.downArrow": "flèche bas",
    "makeymakey.downArrowShort": "bas",
    "makeymakey.leftArrow": "flèche gauche",
    "makeymakey.leftArrowShort": "gauche",
    "makeymakey.rightArrow": "flèche droite",
    "makeymakey.rightArrowShort": "droite",
    "makeymakey.spaceKey": "espace",
    "makeymakey.upArrow": "flèche haut",
    "makeymakey.upArrowShort": "haut",
    "makeymakey.whenKeyPressed": "quand la touche [KEY] pressée",
    "makeymakey.whenKeysPressedInOrder": "quand [SEQUENCE] sont pressés dans l'ordre",
    "microbit.buttonsMenu.any": "any",
    "microbit.clearDisplay": "effacer l'écran",
    "microbit.defaultTextToDisplay": "Bonjour !",
    "microbit.displaySymbol": "afficher [MATRIX]",
    "microbit.displayText": "afficher le texte [TEXT]",
    "microbit.gesturesMenu.jumped": "sauté",
    "microbit.gesturesMenu.moved": "bougé",
    "microbit.gesturesMenu.shaken": "secoué",
    "microbit.isButtonPressed": "bouton [BTN] appuyé ?",
    "microbit.isTilted": "tilted [DIRECTION]?",
    "microbit.pinStateMenu.off": "désactivée",
    "microbit.pinStateMenu.on": "activée",
    "microbit.tiltAngle": "angle d'inclinaison [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "any",
    "microbit.tiltDirectionMenu.back": "back",
    "microbit.tiltDirectionMenu.front": "front",
    "microbit.tiltDirectionMenu.left": "left",
    "microbit.tiltDirectionMenu.right": "right",
    "microbit.whenButtonPressed": "quand le bouton [BTN] est appuyé",
    "microbit.whenGesture": "quand [GESTURE]",
    "microbit.whenPinConnected": "quand la broche [PIN] est connectée",
    "microbit.whenTilted": "quand incliné [DIRECTION]",
    "music.categoryName": "Musique",
    "music.changeTempo": "ajouter [TEMPO] au tempo",
    "music.drumBass": "(2) Grosse caisse",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Cabasa",
    "music.drumClaves": "(9) Claves",
    "music.drumClosedHiHat": "(6) Charleston fermé",
    "music.drumConga": "(14) Conga",
    "music.drumCowbell": "(11) Cowbell",
    "music.drumCrashCymbal": "(4) Cymbale crash",
    "music.drumCuica": "(18) Cuíca",
    "music.drumGuiro": "(16) Guiro",
    "music.drumHandClap": "(8) Claquement de main",
    "music.drumOpenHiHat": "(5) Charleston ouvert",
    "music.drumSideStick": "(3) Side Stick",
    "music.drumSnare": "(1) Caisse claire",
    "music.drumTambourine": "(7) Tambourin",
    "music.drumTriangle": "(12) Triangle",
    "music.drumVibraslap": "(17) Vibraslap",
    "music.drumWoodBlock": "(10) Wood Block",
    "music.getTempo": "tempo",
    "music.instrumentBass": "(6) Basse",
    "music.instrumentBassoon": "(14) Basson",
    "music.instrumentCello": "(8) Violoncelle",
    "music.instrumentChoir": "(15) Chorale",
    "music.instrumentClarinet": "(10) Clarinette",
    "music.instrumentElectricGuitar": "(5) Guitare électrique",
    "music.instrumentElectricPiano": "(2) Piano électrique",
    "music.instrumentFlute": "(12) Flûte",
    "music.instrumentGuitar": "(4) Guitare",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Boîte à musique",
    "music.instrumentOrgan": "(3) Orgue",
    "music.instrumentPiano": "(1) Piano",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saxophone",
    "music.instrumentSteelDrum": "(18) Steel Drum",
    "music.instrumentSynthLead": "(20) Lead synthétisé",
    "music.instrumentSynthPad": "(21) Pad synthétisé",
    "music.instrumentTrombone": "(9) Trombone",
    "music.instrumentVibraphone": "(16) Vibraphone",
    "music.instrumentWoodenFlute": "(13) Flûte en bois",
    "music.midiPlayDrumForBeats": "jouer du tambour [DRUM] pendant [BEATS] temps",
    "music.midiSetInstrument": "choisir l'instrument n° [INSTRUMENT]",
    "music.playDrumForBeats": "jouer du tambour [DRUM] pendant [BEATS] temps",
    "music.playNoteForBeats": "jouer la note [NOTE] pendant [BEATS] temps",
    "music.restForBeats": "faire une pause pendant [BEATS] temps",
    "music.setInstrument": "choisir l'instrument n° [INSTRUMENT]",
    "music.setTempo": "mettre le tempo à [TEMPO]",
    "pen.categoryName": "Stylo",
    "pen.changeColorParam": "ajouter [VALUE] à la [COLOR_PARAM] du stylo",
    "pen.changeHue": "ajouter [HUE] à la couleur du stylo",
    "pen.changeShade": "ajouter [SHADE] à l'intensité du stylo",
    "pen.changeSize": "ajouter [SIZE] à la taille du stylo",
    "pen.clear": "effacer tout",
    "pen.colorMenu.brightness": "luminosité",
    "pen.colorMenu.color": "couleur",
    "pen.colorMenu.saturation": "saturation",
    "pen.colorMenu.transparency": "transparence",
    "pen.penDown": "stylo en position d'écriture",
    "pen.penUp": "relever le stylo",
    "pen.setColor": "mettre la couleur du stylo à [COLOR]",
    "pen.setColorParam": "mettre la [COLOR_PARAM] du stylo à [VALUE]",
    "pen.setHue": "mettre la couleur du stylo à [HUE]",
    "pen.setShade": "mettre l'intensité du stylo à [SHADE]",
    "pen.setSize": "mettre la taille du stylo à [SIZE]",
    "pen.stamp": "estampiller",
    "speech.defaultWhenIHearValue": "allons-y",
    "speech.extensionName": "Synthèse vocale",
    "speech.listenAndWait": "écouter et attendre",
    "speech.speechReporter": "parole",
    "speech.whenIHear": "quand j'entends [PHRASE]",
    "text2speech.alto": "alto",
    "text2speech.categoryName": "Synthèse vocale",
    "text2speech.defaultTextToSpeak": "bonjour",
    "text2speech.giant": "géant",
    "text2speech.kitten": "chaton",
    "text2speech.setLanguageBlock": "mettre la langue à [LANGUAGE]",
    "text2speech.setVoiceBlock": "choisir la voix du [VOICE]",
    "text2speech.speakAndWaitBlock": "prononcer [WORDS]",
    "text2speech.squeak": "piailler",
    "text2speech.tenor": "ténor",
    "translate.categoryName": "Traduire",
    "translate.defaultTextToTranslate": "bonjour",
    "translate.translateBlock": "traduire [WORDS] en [LANGUAGE]",
    "translate.viewerLanguage": "langue",
    "videoSensing.categoryName": "Détection vidéo",
    "videoSensing.direction": "direction",
    "videoSensing.motion": "mouvement",
    "videoSensing.off": "désactivée",
    "videoSensing.on": "on",
    "videoSensing.onFlipped": "on flipped",
    "videoSensing.setVideoTransparency": "set video transparency to [TRANSPARENCY]",
    "videoSensing.sprite": "sprite",
    "videoSensing.stage": "scène",
    "videoSensing.videoOn": "video [ATTRIBUTE] on [SUBJECT]",
    "videoSensing.videoToggle": "turn video [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "when video motion > [REFERENCE]",
    "wedo2.getDistance": "distance",
    "wedo2.getTiltAngle": "angle d'inclinaison [TILT_DIRECTION]",
    "wedo2.isTilted": "incliné [TILT_DIRECTION_ANY] ?",
    "wedo2.motorDirection.backward": "par là",
    "wedo2.motorDirection.forward": "par ici",
    "wedo2.motorDirection.reverse": "inversé",
    "wedo2.motorId.a": "moteur A",
    "wedo2.motorId.all": "tous les moteurs",
    "wedo2.motorId.b": "moteur B",
    "wedo2.motorId.default": "moteur",
    "wedo2.motorOff": "éteindre le moteur [MOTOR_ID]",
    "wedo2.motorOn": "allumer le moteur [MOTOR_ID]",
    "wedo2.motorOnFor": "allumer le moteur [MOTOR_ID] pendant [DURATION] secondes",
    "wedo2.playNoteFor": "jouer la note [NOTE] pendant [DURATION] secondes",
    "wedo2.setLightHue": "mettre la couleur de la lampe à [HUE]",
    "wedo2.setMotorDirection": "mettre la direction du moteur [MOTOR_ID] à [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "mettre la puissance du moteur [MOTOR_ID] à [POWER]",
    "wedo2.tiltDirection.any": "any",
    "wedo2.tiltDirection.down": "vers le bas",
    "wedo2.tiltDirection.left": "à gauche",
    "wedo2.tiltDirection.right": "à droite",
    "wedo2.tiltDirection.up": "vers le haut",
    "wedo2.whenDistance": "quand la distance [OP] [REFERENCE]",
    "wedo2.whenTilted": "quand incliné [TILT_DIRECTION_ANY]",
    "p2p.categoryName": "Nuage",
    "p2p.createRoom": "créer le monde [ROOMID] avec le mot de passe [PASSWORD] jusqu'à [SIZE] utilisateurs et rejoindre l'équipe [TEAM]",
    "p2p.joinroom": "rejoignez le monde [ROOMID] avec le mot de passe [PASSWORD] en équipe [TEAM]",
    "p2p.leaveroom": "quitter le monde",
    "p2p.broadcast": "diffuser un message [MESSAGE] à l'équipe [TEAM]",
    "p2p.receivemessage": "Quand je reçois un message du monde",
    "p2p.host": "hôtesse",
    "p2p.rooms": "mondes",
    "p2p.sender": "expéditrice",
    "p2p.message": "un message",
    "p2p.roomUsers": "utilisateurs du monde",
    "p2p.teamUsers": "utilisateurs de l'équipe [TEAM]",
    "widget.categoryName": "Stylo",
    "widget.addTextbox": "ajouter une zone de texte à X [X] Y [Y] largeur [WIDTH] hauteur [HEIGHT] ligne [MULTIPLELINE] scroll [SCROLL] mode [MODE] nommé [NAME]",
    "widget.valueFromWidget": "valeur du widget nommé [NAME]",
    "widget.setText": "définir le texte sur [TEXT] pour la zone de texte [NAME]",
    "widget.appendText": "ajouter le texte [TEXT] à la zone de texte [NAME]",
    "widget.addLabel": "ajouter l'étiquette [TEXT] à X [X] Y [Y] largeur [WIDTH] hauteur [HEIGHT] nommé [NAME]",
    "widget.addButton": "ajouter le bouton [TEXT] à X [X] Y [Y] largeur [WIDTH] hauteur [HEIGHT] tooltip [TOOLTIP] nommé [NAME]",
    "widget.addDatePicker": "ajouter un sélecteur de date à X [X] Y [Y] nommé [NAME]",
    "widget.addColorPicker": "ajouter un sélecteur de couleurs à X [X] Y [Y] nommé [NAME]",
    "widget.addSlider": "ajouter un curseur à X [X] Y [Y] entre [MIN] et [MAX] nommé [NAME]",
    "widget.addMenu": "ajouter un menu à X [X] Y [Y] en utilisant la liste [LIST] nommée [NAME]",
    "widget.whenButtonClicked": "lorsque le bouton nommé [NAME] a cliqué",
    "widget.whenWidgetChanges": "lorsque le widget nommé [NAME] change",
    "widget.setTextStyle": "définir le style de texte [FONT] taille de police [FONTSIZE] couleur du texte [TEXTCOLOR] gras [BOLDNESS] pour [NAME]",
    "widget.setWidgetStyle": "définir la couleur d'arrière-plan du widget [BGCOLOR] la couleur de la bordure [BORDERCOLOR] le rayon de la bordure [BORDERRADIUS] pour [NAME]",
    "widget.removeWidget": "supprimer le widget nommé [NAME]",
    "widget.removeAllWidgets": "supprimer tous les widgets",
    "widget.setVisibility": "définir la visibilité [VISIBILITY] pour le widget nommé [NAME]",
    "widget.setVisibilityForAll": "définir la visibilité [VISIBILITY] pour tous les widgets",
    "widget.whenMouseOver": "lorsque le pointeur est sur le widget nommé [NAME]",
    "widget.addImage": "ajouter une image [COSTUME] pour [NAME]"
  },
  "zh-cn": {
    "boost.color.any": "任何颜色",
    "boost.color.black": "黑色",
    "boost.color.blue": "蓝色",
    "boost.color.green": "绿色",
    "boost.color.red": "黄色",
    "boost.color.white": "白色",
    "boost.color.yellow": "黄色",
    "boost.getMotorPosition": "马达 [MOTOR_REPORTER_ID] 位置",
    "boost.getTiltAngle": "向[TILT_DIRECTION]倾角",
    "boost.motorDirection.backward": "逆时针",
    "boost.motorDirection.forward": "顺时针",
    "boost.motorDirection.reverse": "反转",
    "boost.motorOff": "关闭马达 [MOTOR_ID]",
    "boost.motorOn": "开启马达 [MOTOR_ID]",
    "boost.motorOnFor": "使马达 [MOTOR_ID]转动 [DURATION] 秒",
    "boost.motorOnForRotation": "使马达 [MOTOR_ID]转动 [ROTATION] 圈",
    "boost.seeingColor": "看到 [COLOR]积木 ?",
    "boost.setLightHue": "将灯光颜色设为[HUE]",
    "boost.setMotorDirection": "将马达[MOTOR_ID] 方向设为 [MOTOR_DIRECTION]",
    "boost.setMotorPower": "将马达 [MOTOR_ID] 速度设为 [POWER]%",
    "boost.tiltDirection.any": "任意方向",
    "boost.tiltDirection.down": "下",
    "boost.tiltDirection.left": "左",
    "boost.tiltDirection.right": "右",
    "boost.tiltDirection.up": "上",
    "boost.whenColor": "当看到[COLOR]积木",
    "boost.whenTilted": "当向[TILT_DIRECTION_ANY]倾斜",
    "ev3.beepNote": "鸣笛[NOTE][TIME]秒",
    "ev3.buttonPressed": "按下按钮[PORT]？",
    "ev3.getBrightness": "亮度",
    "ev3.getDistance": "距离",
    "ev3.getMotorPosition": "马达[PORT]的位置",
    "ev3.motorSetPower": "马达[PORT]功率设为[POWER]%",
    "ev3.motorTurnClockwise": "马达[PORT]正转[TIME]秒",
    "ev3.motorTurnCounterClockwise": "马达[PORT]反转[TIME]秒",
    "ev3.whenBrightnessLessThan": "当亮度 < [DISTANCE]",
    "ev3.whenButtonPressed": "当按下按钮[PORT]",
    "ev3.whenDistanceLessThan": "当距离 < [DISTANCE]",
    "gdxfor.getAcceleration": "向[DIRECTION]的加速度",
    "gdxfor.getForce": "受力",
    "gdxfor.getSpin": "向[DIRECTION]的旋转速度",
    "gdxfor.getTilt": "向[TILT]倾角",
    "gdxfor.isFreeFalling": "自由落体？",
    "gdxfor.isTilted": "向[TILT]倾斜？",
    "gdxfor.pulled": "拉扯",
    "gdxfor.pushed": "挤压",
    "gdxfor.shaken": "被晃动",
    "gdxfor.startedFalling": "开始自由落体",
    "gdxfor.tiltDirectionMenu.any": "任意方向",
    "gdxfor.tiltDirectionMenu.back": "后",
    "gdxfor.tiltDirectionMenu.front": "前",
    "gdxfor.tiltDirectionMenu.left": "左",
    "gdxfor.tiltDirectionMenu.right": "右",
    "gdxfor.turnedFaceDown": "正面向下",
    "gdxfor.turnedFaceUp": "正面向上",
    "gdxfor.whenForcePushedOrPulled": "当力传感器被[PUSH_PULL]",
    "gdxfor.whenGesture": "当传感器[GESTURE]",
    "gdxfor.whenTilted": "当向[TILT]倾斜",
    "makeymakey.downArrow": "↓",
    "makeymakey.downArrowShort": "下",
    "makeymakey.leftArrow": "←",
    "makeymakey.leftArrowShort": "左",
    "makeymakey.rightArrow": "→",
    "makeymakey.rightArrowShort": "右",
    "makeymakey.spaceKey": "空格",
    "makeymakey.upArrow": "↑",
    "makeymakey.upArrowShort": "上",
    "makeymakey.whenKeyPressed": "当按下 [KEY] 键",
    "makeymakey.whenKeysPressedInOrder": "当依次按下[SEQUENCE]键时",
    "microbit.buttonsMenu.any": "任意",
    "microbit.clearDisplay": "清空屏幕",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.displaySymbol": "显示[MATRIX]",
    "microbit.displayText": "显示文本[TEXT]",
    "microbit.gesturesMenu.jumped": "抛起",
    "microbit.gesturesMenu.moved": "移动",
    "microbit.gesturesMenu.shaken": "晃动",
    "microbit.isButtonPressed": "按下[BTN]按钮？",
    "microbit.isTilted": "向[DIRECTION]倾斜？",
    "microbit.pinStateMenu.off": "低电平",
    "microbit.pinStateMenu.on": "高电平",
    "microbit.tiltAngle": "向[DIRECTION]倾角",
    "microbit.tiltDirectionMenu.any": "任意",
    "microbit.tiltDirectionMenu.back": "后",
    "microbit.tiltDirectionMenu.front": "前",
    "microbit.tiltDirectionMenu.left": "左",
    "microbit.tiltDirectionMenu.right": "右",
    "microbit.whenButtonPressed": "当按下[BTN]按钮",
    "microbit.whenGesture": "当被[GESTURE]",
    "microbit.whenPinConnected": "当引脚[PIN]接地",
    "microbit.whenTilted": "当向[DIRECTION]倾斜",
    "music.categoryName": "音乐",
    "music.changeTempo": "将演奏速度增加[TEMPO]",
    "music.drumBass": "(2) 低音鼓",
    "music.drumBongo": "(13) 邦戈鼓",
    "music.drumCabasa": "(15) 卡巴萨",
    "music.drumClaves": "(9) 音棒",
    "music.drumClosedHiHat": "(6) 闭击踩镲",
    "music.drumConga": "(14) 康加鼓",
    "music.drumCowbell": "(11) 牛铃",
    "music.drumCrashCymbal": "(4) 碎音钹",
    "music.drumCuica": "(18) 锯加鼓",
    "music.drumGuiro": "(16) 刮瓜",
    "music.drumHandClap": "(8) 手掌",
    "music.drumOpenHiHat": "(5) 开击踩镲",
    "music.drumSideStick": "(3) 敲鼓边",
    "music.drumSnare": "(1) 小军鼓",
    "music.drumTambourine": "(7) 铃鼓",
    "music.drumTriangle": "(12) 三角铁",
    "music.drumVibraslap": "(17) 颤音器",
    "music.drumWoodBlock": "(10) 木鱼",
    "music.getTempo": "演奏速度",
    "music.instrumentBass": "(6) 贝斯",
    "music.instrumentBassoon": "(14) 巴松管",
    "music.instrumentCello": "(8) 大提琴",
    "music.instrumentChoir": "(15) 唱诗班",
    "music.instrumentClarinet": "(10) 单簧管",
    "music.instrumentElectricGuitar": "(5) 电吉他",
    "music.instrumentElectricPiano": "(2) 电钢琴",
    "music.instrumentFlute": "(12) 长笛",
    "music.instrumentGuitar": "(4) 吉他",
    "music.instrumentMarimba": "(19) 马林巴琴",
    "music.instrumentMusicBox": "(17) 八音盒",
    "music.instrumentOrgan": "(3) 风琴",
    "music.instrumentPiano": "(1) 钢琴",
    "music.instrumentPizzicato": "(7) 拨弦",
    "music.instrumentSaxophone": "(11) 萨克斯管",
    "music.instrumentSteelDrum": "(18) 钢鼓",
    "music.instrumentSynthLead": "(20) 合成主音",
    "music.instrumentSynthPad": "(21) 合成柔音",
    "music.instrumentTrombone": "(9) 长号",
    "music.instrumentVibraphone": "(16) 颤音琴",
    "music.instrumentWoodenFlute": "(13) 木长笛",
    "music.midiPlayDrumForBeats": "击打 [DRUM] [BEATS] 拍",
    "music.midiSetInstrument": "将乐器设为 [INSTRUMENT]",
    "music.playDrumForBeats": "击打 [DRUM] [BEATS] 拍",
    "music.playNoteForBeats": "演奏音符[NOTE][BEATS]拍",
    "music.restForBeats": "休止[BEATS]拍",
    "music.setInstrument": "将乐器设为 [INSTRUMENT]",
    "music.setTempo": "将演奏速度设定为[TEMPO]",
    "pen.categoryName": "画笔",
    "pen.changeColorParam": "将笔的 [COLOR_PARAM] 增加[VALUE]",
    "pen.changeHue": "将笔的颜色增加[HUE]",
    "pen.changeShade": "将笔的亮度增加[SHADE]",
    "pen.changeSize": "将笔的粗细增加[SIZE]",
    "pen.clear": "全部擦除",
    "pen.colorMenu.brightness": "亮度",
    "pen.colorMenu.color": "颜色",
    "pen.colorMenu.saturation": "饱和度",
    "pen.colorMenu.transparency": "透明度",
    "pen.penDown": "落笔",
    "pen.penUp": "抬笔",
    "pen.setColor": "将笔的颜色设为[COLOR]",
    "pen.setColorParam": "将笔的 [COLOR_PARAM] 设为[VALUE]",
    "pen.setHue": "将笔的颜色设为[HUE]",
    "pen.setShade": "将笔的亮度设为[SHADE]",
    "pen.setSize": "将笔的粗细设为[SIZE]",
    "pen.stamp": "图章",
    "speech.defaultWhenIHearValue": "开始",
    "speech.extensionName": "语音识别",
    "speech.listenAndWait": "听候语音输入",
    "speech.speechReporter": "语音输入",
    "speech.whenIHear": "当听到[PHRASE]",
    "text2speech.alto": "中音",
    "text2speech.categoryName": "文字朗读",
    "text2speech.defaultTextToSpeak": "你好",
    "text2speech.giant": "巨人",
    "text2speech.kitten": "小猫",
    "text2speech.setLanguageBlock": "将朗读语言设置为[LANGUAGE]",
    "text2speech.setVoiceBlock": "使用 [VOICE] 嗓音",
    "text2speech.speakAndWaitBlock": "朗读 [WORDS]",
    "text2speech.squeak": "尖细",
    "text2speech.tenor": "男高音",
    "translate.categoryName": "翻译",
    "translate.defaultTextToTranslate": "你好",
    "translate.translateBlock": "将 [WORDS] 译为 [LANGUAGE]",
    "translate.viewerLanguage": "访客语言",
    "videoSensing.categoryName": "视频侦测",
    "videoSensing.direction": "方向",
    "videoSensing.motion": "运动",
    "videoSensing.off": "关闭",
    "videoSensing.on": "开启",
    "videoSensing.onFlipped": "镜像开启",
    "videoSensing.setVideoTransparency": "将视频透明度设为[TRANSPARENCY]",
    "videoSensing.sprite": "角色",
    "videoSensing.stage": "舞台",
    "videoSensing.videoOn": "相对于[SUBJECT]的视频[ATTRIBUTE]",
    "videoSensing.videoToggle": "[VIDEO_STATE]摄像头",
    "videoSensing.whenMotionGreaterThan": "当视频运动 > [REFERENCE]",
    "wedo2.getDistance": "距离",
    "wedo2.getTiltAngle": "向[TILT_DIRECTION]倾角",
    "wedo2.isTilted": "向[TILT_DIRECTION_ANY]倾斜？",
    "wedo2.motorDirection.backward": "逆时针",
    "wedo2.motorDirection.forward": "顺时针",
    "wedo2.motorDirection.reverse": "反转",
    "wedo2.motorId.a": "马达A",
    "wedo2.motorId.all": "所有马达",
    "wedo2.motorId.b": "马达B",
    "wedo2.motorId.default": "马达",
    "wedo2.motorOff": "关闭[MOTOR_ID]",
    "wedo2.motorOn": "开启[MOTOR_ID]",
    "wedo2.motorOnFor": "开启[MOTOR_ID][DURATION]秒",
    "wedo2.playNoteFor": "演奏音符[NOTE][DURATION]秒",
    "wedo2.setLightHue": "将灯光颜色设为[HUE]",
    "wedo2.setMotorDirection": "将[MOTOR_ID]转向设为[MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "将[MOTOR_ID]功率设为[POWER]",
    "wedo2.tiltDirection.any": "任意方向",
    "wedo2.tiltDirection.down": "下",
    "wedo2.tiltDirection.left": "左",
    "wedo2.tiltDirection.right": "右",
    "wedo2.tiltDirection.up": "上",
    "wedo2.whenDistance": "当距离[OP][REFERENCE]",
    "wedo2.whenTilted": "当向[TILT_DIRECTION_ANY]倾斜",
    "p2p.categoryName": "云",
    "p2p.createRoom": "使用密码 [PASSWORD] 创建世界 [ROOMID] 最多 [SIZE] 个用户并加入团队 [TEAM]",
    "p2p.joinroom": "使用密码 [PASSWORD] 作为团队 [TEAM] 进入世界 [ROOMID]",
    "p2p.leaveroom": "离开世界",
    "p2p.broadcast": "向 [TEAM] 团队广播消息 [MESSAGE]",
    "p2p.receivemessage": "当我收到世界的消息时",
    "p2p.host": "主持人",
    "p2p.rooms": "世界",
    "p2p.sender": "发件人",
    "p2p.message": "信息",
    "p2p.roomUsers": "信息",
    "p2p.teamUsers": "[TEAM] 团队的用户",
    "widget.categoryName": "控件",
    "widget.addTextbox": "在 X [X] Y [Y] 宽度 [WIDTH] 高度 [HEIGHT] 行 [MULTIPLELINE] 滚动 [SCROLL] 模式 [MODE] 命名 [NAME] 添加文本框",
    "widget.valueFromWidget": "来自名为 [NAME] 的小部件的值",
    "widget.setText": "将 [NAME] 的文本设置为 [TEXT]",
    "widget.appendText": "将 [TEXT] 附加到文本框 [NAME]",
    "widget.addLabel": "在 X [X] Y [Y] 宽度 [WIDTH] 高度 [HEIGHT] 处添加标签 [TEXT]，命名为 [NAME]",
    "widget.addButton": "在 X [X] Y [Y] 宽度 [WIDTH] 高度 [HEIGHT] 工具提示 [TOOLTIP] 处添加按钮 [TEXT]，名为 [NAME]",
    "widget.addDatePicker": "在名为 [NAME] 的 X [X] Y [Y] 添加日期选择器",
    "widget.addColorPicker": "在名为 [NAME] 的 X [X] Y [Y] 添加颜色选择器",
    "widget.addSlider": "在名为 [NAME] 的 [MIN] 和 [MAX] 之间的 X [X] Y [Y] 添加滑块",
    "widget.addMenu": "使用名为 [NAME] 的列表 [LIST] 在 X [X] Y [Y] 添加菜单",
    "widget.whenButtonClicked": "当名为 [NAME] 的按钮被点击的时候",
    "widget.whenWidgetChanges": "当名为 [NAME] 的小部件更改时",
    "widget.setTextStyle": "为 [NAME] 设置文本样式 [FONT] 字体大小 [FONTSIZE] 文本颜色 [TEXTCOLOR] 粗度 [BOLDNESS]",
    "widget.setWidgetStyle": "为 [NAME] 设置小部件背景颜色 [BGCOLOR] 边框颜色 [BORDERCOLOR] 边框半径 [BORDERRADIUS]",
    "widget.removeWidget": "删除名为 [NAME] 的小控件",
    "widget.removeAllWidgets": "删除所有小控件",
    "widget.setVisibility": "设置名为 [NAME] 的小控件可见性 [VISIBILITY]",
    "widget.setVisibilityForAll": "为所有小部件设置可见性 [VISIBILITY]",
    "widget.whenMouseOver": "当指针位于名为 [NAME] 的小部件上时",
    "widget.addImage": "为 [NAME] 添加图像 [COSTUME]"
  }
};
